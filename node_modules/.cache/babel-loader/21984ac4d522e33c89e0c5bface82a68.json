{"ast":null,"code":"import { __values, __assign, __spreadArray, __read } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, keys, toSCXMLEvent, toInvokeSource, isMachine, isPromiseLike, isObservable, isBehavior, reportUnhandledExceptionOnInvocation, interopSymbols, symbolObservable, isArray, toEventObject, isString, isActor, toObserver, uniqueId } from './utils.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { isState, State, bindActionToState } from './State.js';\nimport { provide, consume } from './serviceScope.js';\nimport { isSpawnedActor, createDeferredActor } from './Actor.js';\nimport { Scheduler } from './scheduler.js';\nimport { registry } from './registry.js';\nimport { registerService, getGlobal } from './devTools.js';\nimport { spawnBehavior } from './behaviors.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.scheduler = new Scheduler();\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\".concat(_event.name, \"\\\" was sent to stopped service \\\"\").concat(_this.machine.id, \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \").concat(JSON.stringify(_event.data)));\n        }\n\n        return _this.state;\n      }\n\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\".concat(_event.name, \"\\\" was sent to uninitialized service \\\"\").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n        , \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \").concat(JSON.stringify(_event.data)));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\".concat(to, \"' from service '\").concat(_this.id, \"'.\"));\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\".concat(_this.id, \"' has no parent: unable to send event \").concat(event.type));\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\".concat(error(_this.id)) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\".concat(this.id, \"'. Make sure the service is started first.\"));\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Update children\n\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      this.onDone(resolvedCompleteListener);\n    }\n\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isState(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    var _this = this;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    this.state.configuration.forEach(function (stateNode) {\n      var e_11, _a;\n\n      try {\n        for (var _b = __values(stateNode.definition.exit), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var action = _c.value;\n\n          _this.exec(action, _this.state);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n    }); // Stop all children\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \").concat(JSON.stringify(event)));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\"));\n    }\n\n    this.scheduler.schedule(function () {\n      var e_12, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spreadArray([], __read(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })), false));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_12_1) {\n        e_12 = {\n          error: e_12_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_12) throw e_12.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_13, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\".concat(event, \"' from interpreter '\").concat(this.id, \"' to nonexistant child '\").concat(id, \"'.\"));\n        }\n\n        child.send(event);\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          if (this.status !== InterpreterStatus.Running) {\n            return;\n          }\n\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.id || activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var invokeSource = toInvokeSource(activity.src);\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[invokeSource.type] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\".concat(activity.src, \"' in in machine '\").concat(this.machine.id, \"'). \") + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\".concat(activity.src, \"' in machine '\").concat(this.machine.id, \"'.\"));\n              }\n\n              return;\n            }\n\n            var resolvedData = data ? mapContext(data, context, _event) : undefined;\n\n            if (typeof serviceCreator === 'string') {\n              // TODO: warn\n              return;\n            }\n\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n              data: resolvedData,\n              src: invokeSource,\n              meta: activity.meta\n            }) : serviceCreator;\n\n            if (!source) {\n              // TODO: warn?\n              return;\n            }\n\n            var options = void 0;\n\n            if (isMachine(source)) {\n              source = resolvedData ? source.withContext(resolvedData) : source;\n              options = {\n                autoForward: autoForward\n              };\n            }\n\n            this.spawn(source, id, options);\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\".concat(action.type, \"'\"));\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    var _a;\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId); // this.state might not exist at the time this is called,\n    // such as when a child is added then removed while initializing the state\n\n    (_a = this.state) === null || _a === void 0 ? true : delete _a.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity, name);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else if (isBehavior(entity)) {\n      return this.spawnBehavior(entity, name);\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\".concat(name, \"\\\" of type \\\"\").concat(typeof entity, \"\\\".\"));\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnBehavior = function (behavior, id) {\n    var actorRef = spawnBehavior(behavior, {\n      id: id,\n      parent: this\n    });\n    this.children.set(id, actorRef);\n    return actorRef;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _this = this;\n\n    var canceled = false;\n    var resolvedData;\n    promise.then(function (response) {\n      if (!canceled) {\n        resolvedData = response;\n\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n\n    var actor = __assign({\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return resolvedData;\n      }\n    }, interopSymbols);\n\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var emitted;\n\n    var receive = function (e) {\n      emitted = e;\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = __assign({\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        listeners.add(next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return emitted;\n      }\n    }, interopSymbols);\n\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _this = this;\n\n    var emitted;\n    var subscription = source.subscribe(function (value) {\n      emitted = value;\n\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n\n    var actor = __assign({\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      getSnapshot: function () {\n        return emitted;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, interopSymbols);\n\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor, name) {\n    this.children.set(name, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\".concat(activity.type, \"'\"));\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    this.children.set(id, __assign({\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      getSnapshot: function () {\n        return undefined;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, interopSymbols));\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  }; // this gets stripped by Babel to avoid having \"undefined\" property in environments without this non-standard Symbol\n  // it has to be here to be included in the generated .d.ts\n\n\n  Interpreter.prototype.getSnapshot = function () {\n    if (this.status === InterpreterStatus.NotStarted) {\n      return this.initialState;\n    }\n\n    return this._state;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = /*#__PURE__*/function (global) {\n    return {\n      execute: true,\n      deferEvents: true,\n      clock: {\n        setTimeout: function (fn, ms) {\n          return setTimeout(fn, ms);\n        },\n        clearTimeout: function (id) {\n          return clearTimeout(id);\n        }\n      },\n      logger: global.console.log.bind(console),\n      devTools: false\n    };\n  }(typeof self !== 'undefined' ? self : global);\n\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\".concat(isMachine(entity) ? entity.id : 'undefined', \"\\\") outside of a service. This will have no effect.\"));\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, InterpreterStatus, interpret, spawn };","map":{"version":3,"sources":["/Users/angelinadeo/thehacktrical/NYUhack/node_modules/xstate/es/interpreter.js"],"names":["__values","__assign","__spreadArray","__read","IS_PRODUCTION","warn","mapContext","isFunction","keys","toSCXMLEvent","toInvokeSource","isMachine","isPromiseLike","isObservable","isBehavior","reportUnhandledExceptionOnInvocation","interopSymbols","symbolObservable","isArray","toEventObject","isString","isActor","toObserver","uniqueId","ActionTypes","SpecialTargets","isInFinalState","errorPlatform","log","stop","start","cancel","send","update","error","error$1","doneInvoke","initEvent","getActionFunction","isState","State","bindActionToState","provide","consume","isSpawnedActor","createDeferredActor","Scheduler","registry","registerService","getGlobal","spawnBehavior","DEFAULT_SPAWN_OPTIONS","sync","autoForward","InterpreterStatus","Interpreter","machine","options","_this","defaultOptions","scheduler","delayedEventsMap","listeners","Set","contextListeners","stopListeners","doneListeners","eventListeners","sendListeners","initialized","status","NotStarted","children","Map","forwardTo","init","event","payload","batch","state","_event","Stopped","concat","name","id","JSON","stringify","data","Running","deferEvents","Error","schedule","forward","nextState","_state","sendTo","to","isParent","parent","Parent","target","get","undefined","type","origin","sessionId","resolvedOptions","clock","logger","resolvedId","bookId","Object","defineProperty","prototype","_initialState","initialState","enumerable","configurable","execute","actionsConfig","e_1","_a","_b","actions","_c","next","done","action","value","exec","e_1_1","return","call","e_2","e_3","e_4","e_5","_d","_sessionid","forEach","child","devTools","_e","_f","listener","e_2_1","_g","_h","e_3_1","_j","_k","contextListener","context","history","e_4_1","isDone","configuration","finalChildStateNode","find","sn","doneData","_l","_m","e_5_1","onTransition","add","subscribe","nextListenerOrObserver","_","completeListener","unsubscribe","resolvedCompleteListener","bind","complete","onDone","delete","onEvent","onSend","onChange","onStop","off","register","resolvedState","resolveState","from","attachDev","initialize","e_6","e_7","e_8","e_9","e_10","e_6_1","e_7_1","e_8_1","_o","e_9_1","stateNode","e_11","definition","exit","e_11_1","_p","_q","key","clearTimeout","e_10_1","clear","free","events","length","e_12","batchChanged","batchedActions","_loop_1","event_1","transition","push","apply","map","a","changed","events_1","events_1_1","e_12_1","sender","indexOf","nextEvents","some","nextEvent","e_13","e_13_1","defer","sendAction","setTimeout","delay","sendId","actionFunctionMap","actionOrExec","err","activity","activities","Invoke","invokeSource","src","serviceCreator","services","resolvedData","source","meta","withContext","spawn","spawnActivity","stopChild","label","removeChild","childId","entity","spawnPromise","Promise","resolve","spawnCallback","spawnActor","spawnObservable","spawnMachine","childService","actor","set","doneEvent","behavior","actorRef","promise","canceled","then","response","errorData","errorEvent","strict","handleError","observer","unsubscribed","toJSON","getSnapshot","callback","receivers","emitted","receive","e","callbackStop","newListener","receiver","subscription","implementation","dispose","spawnEffect","global","__REDUX_DEVTOOLS_EXTENSION__","devToolsOptions","connect","autoPause","stateSanitizer","features","jump","skip","fn","ms","console","self","interpret","resolveSpawnOptions","nameOrOptions","service","isLazyEntity","interpreter"],"mappings":"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","sourcesContent":["import { __values, __assign, __spreadArray, __read } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, keys, toSCXMLEvent, toInvokeSource, isMachine, isPromiseLike, isObservable, isBehavior, reportUnhandledExceptionOnInvocation, interopSymbols, symbolObservable, isArray, toEventObject, isString, isActor, toObserver, uniqueId } from './utils.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { isState, State, bindActionToState } from './State.js';\nimport { provide, consume } from './serviceScope.js';\nimport { isSpawnedActor, createDeferredActor } from './Actor.js';\nimport { Scheduler } from './scheduler.js';\nimport { registry } from './registry.js';\nimport { registerService, getGlobal } from './devTools.js';\nimport { spawnBehavior } from './behaviors.js';\n\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.scheduler = new Scheduler();\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\".concat(_event.name, \"\\\" was sent to stopped service \\\"\").concat(_this.machine.id, \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \").concat(JSON.stringify(_event.data)));\n        }\n\n        return _this.state;\n      }\n\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\".concat(_event.name, \"\\\" was sent to uninitialized service \\\"\").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n        , \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \").concat(JSON.stringify(_event.data)));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\".concat(to, \"' from service '\").concat(_this.id, \"'.\"));\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\".concat(_this.id, \"' has no parent: unable to send event \").concat(event.type));\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\".concat(error(_this.id)) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\".concat(this.id, \"'. Make sure the service is started first.\"));\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Update children\n\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      this.onDone(resolvedCompleteListener);\n    }\n\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isState(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    var _this = this;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    this.state.configuration.forEach(function (stateNode) {\n      var e_11, _a;\n\n      try {\n        for (var _b = __values(stateNode.definition.exit), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var action = _c.value;\n\n          _this.exec(action, _this.state);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n    }); // Stop all children\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \").concat(JSON.stringify(event)));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\"));\n    }\n\n    this.scheduler.schedule(function () {\n      var e_12, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spreadArray([], __read(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })), false));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_12_1) {\n        e_12 = {\n          error: e_12_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_12) throw e_12.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_13, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\".concat(event, \"' from interpreter '\").concat(this.id, \"' to nonexistant child '\").concat(id, \"'.\"));\n        }\n\n        child.send(event);\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          if (this.status !== InterpreterStatus.Running) {\n            return;\n          }\n\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.id || activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var invokeSource = toInvokeSource(activity.src);\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[invokeSource.type] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\".concat(activity.src, \"' in in machine '\").concat(this.machine.id, \"'). \") + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\".concat(activity.src, \"' in machine '\").concat(this.machine.id, \"'.\"));\n              }\n\n              return;\n            }\n\n            var resolvedData = data ? mapContext(data, context, _event) : undefined;\n\n            if (typeof serviceCreator === 'string') {\n              // TODO: warn\n              return;\n            }\n\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n              data: resolvedData,\n              src: invokeSource,\n              meta: activity.meta\n            }) : serviceCreator;\n\n            if (!source) {\n              // TODO: warn?\n              return;\n            }\n\n            var options = void 0;\n\n            if (isMachine(source)) {\n              source = resolvedData ? source.withContext(resolvedData) : source;\n              options = {\n                autoForward: autoForward\n              };\n            }\n\n            this.spawn(source, id, options);\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\".concat(action.type, \"'\"));\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    var _a;\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId); // this.state might not exist at the time this is called,\n    // such as when a child is added then removed while initializing the state\n\n    (_a = this.state) === null || _a === void 0 ? true : delete _a.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity, name);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else if (isBehavior(entity)) {\n      return this.spawnBehavior(entity, name);\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\".concat(name, \"\\\" of type \\\"\").concat(typeof entity, \"\\\".\"));\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnBehavior = function (behavior, id) {\n    var actorRef = spawnBehavior(behavior, {\n      id: id,\n      parent: this\n    });\n    this.children.set(id, actorRef);\n    return actorRef;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _this = this;\n\n    var canceled = false;\n    var resolvedData;\n    promise.then(function (response) {\n      if (!canceled) {\n        resolvedData = response;\n\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n\n    var actor = __assign({\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return resolvedData;\n      }\n    }, interopSymbols);\n\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var emitted;\n\n    var receive = function (e) {\n      emitted = e;\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = __assign({\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        listeners.add(next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return emitted;\n      }\n    }, interopSymbols);\n\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _this = this;\n\n    var emitted;\n    var subscription = source.subscribe(function (value) {\n      emitted = value;\n\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n\n    var actor = __assign({\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      getSnapshot: function () {\n        return emitted;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, interopSymbols);\n\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor, name) {\n    this.children.set(name, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\".concat(activity.type, \"'\"));\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    this.children.set(id, __assign({\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      getSnapshot: function () {\n        return undefined;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, interopSymbols));\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  }; // this gets stripped by Babel to avoid having \"undefined\" property in environments without this non-standard Symbol\n  // it has to be here to be included in the generated .d.ts\n\n\n  Interpreter.prototype.getSnapshot = function () {\n    if (this.status === InterpreterStatus.NotStarted) {\n      return this.initialState;\n    }\n\n    return this._state;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = /*#__PURE__*/function (global) {\n    return {\n      execute: true,\n      deferEvents: true,\n      clock: {\n        setTimeout: function (fn, ms) {\n          return setTimeout(fn, ms);\n        },\n        clearTimeout: function (id) {\n          return clearTimeout(id);\n        }\n      },\n      logger: global.console.log.bind(console),\n      devTools: false\n    };\n  }(typeof self !== 'undefined' ? self : global);\n\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\".concat(isMachine(entity) ? entity.id : 'undefined', \"\\\") outside of a service. This will have no effect.\"));\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, InterpreterStatus, interpret, spawn };\n"]},"metadata":{},"sourceType":"module"}