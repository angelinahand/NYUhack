{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tf = require(\"@tensorflow/tfjs-core\");\n\nfunction scaleBoxCoordinates(box, factor) {\n  var startPoint = [box.startPoint[0] * factor[0], box.startPoint[1] * factor[1]];\n  var endPoint = [box.endPoint[0] * factor[0], box.endPoint[1] * factor[1]];\n  return {\n    startPoint: startPoint,\n    endPoint: endPoint\n  };\n}\n\nexports.scaleBoxCoordinates = scaleBoxCoordinates;\n\nfunction getBoxSize(box) {\n  return [Math.abs(box.endPoint[0] - box.startPoint[0]), Math.abs(box.endPoint[1] - box.startPoint[1])];\n}\n\nexports.getBoxSize = getBoxSize;\n\nfunction getBoxCenter(box) {\n  return [box.startPoint[0] + (box.endPoint[0] - box.startPoint[0]) / 2, box.startPoint[1] + (box.endPoint[1] - box.startPoint[1]) / 2];\n}\n\nexports.getBoxCenter = getBoxCenter;\n\nfunction cutBoxFromImageAndResize(box, image, cropSize) {\n  var h = image.shape[1];\n  var w = image.shape[2];\n  var boxes = [[box.startPoint[1] / h, box.startPoint[0] / w, box.endPoint[1] / h, box.endPoint[0] / w]];\n  return tf.image.cropAndResize(image, boxes, [0], cropSize, 'bilinear'\n  /* method */\n  , 0\n  /* extrapolation value */\n  );\n}\n\nexports.cutBoxFromImageAndResize = cutBoxFromImageAndResize;\n/**\n * Enlarges the box by the provided factor.\n * @param box An object with startPoint and endPoint properties describing the\n * outlines of the box to be enlarged.\n * @param factor optional The enlargement factor. Defaults to 1.5\n */\n\nfunction enlargeBox(box, factor) {\n  if (factor === void 0) {\n    factor = 1.5;\n  }\n\n  var center = getBoxCenter(box);\n  var size = getBoxSize(box);\n  var newHalfSize = [factor * size[0] / 2, factor * size[1] / 2];\n  var startPoint = [center[0] - newHalfSize[0], center[1] - newHalfSize[1]];\n  var endPoint = [center[0] + newHalfSize[0], center[1] + newHalfSize[1]];\n  return {\n    startPoint: startPoint,\n    endPoint: endPoint,\n    landmarks: box.landmarks\n  };\n}\n\nexports.enlargeBox = enlargeBox;\n/**\n * Squarifies the provided box by setting its length and height equal to\n * max(length, height) while preserving its center point.\n * @param box An object with startPoint and endPoint properties describing the\n * outlines of the box to be squarified.\n */\n\nfunction squarifyBox(box) {\n  var centers = getBoxCenter(box);\n  var size = getBoxSize(box);\n  var maxEdge = Math.max.apply(Math, size);\n  var halfSize = maxEdge / 2;\n  var startPoint = [centers[0] - halfSize, centers[1] - halfSize];\n  var endPoint = [centers[0] + halfSize, centers[1] + halfSize];\n  return {\n    startPoint: startPoint,\n    endPoint: endPoint,\n    landmarks: box.landmarks\n  };\n}\n\nexports.squarifyBox = squarifyBox;","map":{"version":3,"mappings":"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","names":["scaleBoxCoordinates","box","factor","startPoint","endPoint","exports","getBoxSize","Math","abs","getBoxCenter","cutBoxFromImageAndResize","image","cropSize","h","shape","w","boxes","tf","cropAndResize","enlargeBox","center","size","newHalfSize","landmarks","squarifyBox","centers","maxEdge","max","apply","halfSize"],"sources":["../../src/mediapipe-facemesh/box.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}