{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport { useFocusGuards as t } from \"@radix-ui/react-focus-guards\";\nimport { useCallbackRef as n } from \"@radix-ui/react-use-callback-ref\";\nimport { useDirection as r } from \"@radix-ui/react-use-direction\";\nimport * as o from \"@radix-ui/react-roving-focus\";\nimport { createRovingFocusGroupScope as u } from \"@radix-ui/react-roving-focus\";\nimport { Portal as c } from \"@radix-ui/react-portal\";\nimport * as a from \"@radix-ui/react-popper\";\nimport { createPopperScope as i } from \"@radix-ui/react-popper\";\nimport { Primitive as s } from \"@radix-ui/react-primitive\";\nimport { Presence as l } from \"@radix-ui/react-presence\";\nimport { FocusScope as d } from \"@radix-ui/react-focus-scope\";\nimport { DismissableLayer as p } from \"@radix-ui/react-dismissable-layer\";\nimport { createContextScope as f } from \"@radix-ui/react-context\";\nimport { useComposedRefs as m, composeRefs as v } from \"@radix-ui/react-compose-refs\";\nimport { createCollection as g } from \"@radix-ui/react-collection\";\nimport { composeEventHandlers as M } from \"@radix-ui/primitive\";\nimport { hideOthers as h } from \"aria-hidden\";\nimport { RemoveScroll as C } from \"react-remove-scroll\";\nimport * as E from \"react\";\nimport w from \"@babel/runtime/helpers/esm/extends\";\nconst x = [\"Enter\", \" \"],\n      b = [\"ArrowUp\", \"PageDown\", \"End\"],\n      R = [\"ArrowDown\", \"PageUp\", \"Home\", ...b],\n      _ = {\n  ltr: [...x, \"ArrowRight\"],\n  rtl: [...x, \"ArrowLeft\"]\n},\n      y = {\n  ltr: [\"ArrowLeft\"],\n  rtl: [\"ArrowRight\"]\n},\n      [I, k, P] = g(\"Menu\"),\n      [D, S] = f(\"Menu\", [P, i, u]);\nexport { S as createMenuScope };\nconst O = i(),\n      T = u(),\n      [L, A] = D(\"Menu\");\nexport const Menu = e => {\n  const {\n    __scopeMenu: t,\n    open: o = !1,\n    children: u,\n    onOpenChange: c,\n    modal: i = !0\n  } = e,\n        s = O(t),\n        [l, d] = E.useState(null),\n        p = E.useRef(!1),\n        f = n(c),\n        m = r(l, e.dir);\n  return E.useEffect(() => {\n    const e = () => p.current = !0,\n          t = () => p.current = !1;\n\n    return document.addEventListener(\"keydown\", e, {\n      capture: !0\n    }), document.addEventListener(\"pointerdown\", t, {\n      capture: !0\n    }), document.addEventListener(\"pointermove\", t, {\n      capture: !0\n    }), () => {\n      document.removeEventListener(\"keydown\", e, {\n        capture: !0\n      }), document.removeEventListener(\"pointerdown\", t, {\n        capture: !0\n      }), document.removeEventListener(\"pointermove\", t, {\n        capture: !0\n      });\n    };\n  }, []), /*#__PURE__*/E.createElement(a.Root, s, /*#__PURE__*/E.createElement(L, {\n    scope: t,\n    isSubmenu: !1,\n    isUsingKeyboardRef: p,\n    dir: m,\n    open: o,\n    onOpenChange: f,\n    content: l,\n    onContentChange: d,\n    onRootClose: E.useCallback(() => f(!1), [f]),\n    modal: i\n  }, u));\n};\n/*#__PURE__*/\n\nexport const MenuSub = t => {\n  const {\n    __scopeMenu: r,\n    children: o,\n    open: u = !1,\n    onOpenChange: c\n  } = t,\n        i = A(\"MenuSub\", r),\n        s = O(r),\n        [l, d] = E.useState(null),\n        [p, f] = E.useState(null),\n        m = n(c);\n  return E.useEffect(() => (!1 === i.open && m(!1), () => m(!1)), [i.open, m]), /*#__PURE__*/E.createElement(a.Root, s, /*#__PURE__*/E.createElement(L, {\n    scope: r,\n    isSubmenu: !0,\n    isUsingKeyboardRef: i.isUsingKeyboardRef,\n    dir: i.dir,\n    open: u,\n    onOpenChange: m,\n    content: p,\n    onContentChange: f,\n    onRootClose: i.onRootClose,\n    contentId: e(),\n    trigger: l,\n    onTriggerChange: d,\n    triggerId: e(),\n    modal: !1\n  }, o));\n};\n/*#__PURE__*/\n\nexport const MenuAnchor = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    __scopeMenu: n,\n    ...r\n  } = e,\n        o = O(n);\n  /*#__PURE__*/\n\n  return E.createElement(a.Anchor, w({}, o, r, {\n    ref: t\n  }));\n});\n/*#__PURE__*/\n\nconst [F, K] = D(\"MenuContent\");\nexport const MenuContent = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    forceMount: n,\n    ...r\n  } = e,\n        o = A(\"MenuContent\", e.__scopeMenu);\n  /*#__PURE__*/\n\n  return E.createElement(I.Provider, {\n    scope: e.__scopeMenu\n  }, /*#__PURE__*/E.createElement(l, {\n    present: n || o.open\n  }, /*#__PURE__*/E.createElement(I.Slot, {\n    scope: e.__scopeMenu\n  }, o.isSubmenu ? /*#__PURE__*/E.createElement(X, w({}, r, {\n    ref: t\n  })) : /*#__PURE__*/E.createElement(G, w({}, r, {\n    ref: t\n  })))));\n});\nconst G = /*#__PURE__*/E.forwardRef((e, t) => A(\"MenuContent\", e.__scopeMenu).modal ? /*#__PURE__*/E.createElement(U, w({}, e, {\n  ref: t\n})) : /*#__PURE__*/E.createElement(V, w({}, e, {\n  ref: t\n}))),\n      U = /*#__PURE__*/E.forwardRef((e, t) => {\n  const n = A(\"MenuContent\", e.__scopeMenu),\n        r = E.useRef(null),\n        o = m(t, r);\n  return E.useEffect(() => {\n    const e = r.current;\n    if (e) return h(e);\n  }, []), /*#__PURE__*/E.createElement(B, w({}, e, {\n    ref: o,\n    trapFocus: n.open,\n    disableOutsidePointerEvents: n.open,\n    disableOutsideScroll: !0,\n    onFocusOutside: M(e.onFocusOutside, e => e.preventDefault(), {\n      checkForDefaultPrevented: !1\n    }),\n    onDismiss: () => n.onOpenChange(!1)\n  }));\n}),\n      V = /*#__PURE__*/E.forwardRef((e, t) => {\n  const n = A(\"MenuContent\", e.__scopeMenu);\n  /*#__PURE__*/\n\n  return E.createElement(B, w({}, e, {\n    ref: t,\n    trapFocus: !1,\n    disableOutsidePointerEvents: !1,\n    disableOutsideScroll: !1,\n    onDismiss: () => n.onOpenChange(!1)\n  }));\n}),\n      X = /*#__PURE__*/E.forwardRef((e, t) => {\n  const n = A(\"MenuContent\", e.__scopeMenu),\n        r = E.useRef(null),\n        o = m(t, r);\n  return n.isSubmenu ? /*#__PURE__*/E.createElement(B, w({\n    id: n.contentId,\n    \"aria-labelledby\": n.triggerId\n  }, e, {\n    ref: o,\n    align: \"start\",\n    side: \"rtl\" === n.dir ? \"left\" : \"right\",\n    portalled: !0,\n    disableOutsidePointerEvents: !1,\n    disableOutsideScroll: !1,\n    trapFocus: !1,\n    onOpenAutoFocus: e => {\n      var t;\n      n.isUsingKeyboardRef.current && (null === (t = r.current) || void 0 === t || t.focus()), e.preventDefault();\n    },\n    onCloseAutoFocus: e => e.preventDefault(),\n    onFocusOutside: M(e.onFocusOutside, e => {\n      e.target !== n.trigger && n.onOpenChange(!1);\n    }),\n    onEscapeKeyDown: M(e.onEscapeKeyDown, n.onRootClose),\n    onKeyDown: M(e.onKeyDown, e => {\n      const t = e.currentTarget.contains(e.target),\n            r = y[n.dir].includes(e.key);\n      var o;\n      t && r && (n.onOpenChange(!1), null === (o = n.trigger) || void 0 === o || o.focus(), e.preventDefault());\n    })\n  })) : null;\n}),\n      B = /*#__PURE__*/E.forwardRef((e, n) => {\n  const {\n    __scopeMenu: r,\n    loop: u = !1,\n    trapFocus: i,\n    onOpenAutoFocus: s,\n    onCloseAutoFocus: l,\n    disableOutsidePointerEvents: f,\n    onEscapeKeyDown: v,\n    onPointerDownOutside: g,\n    onFocusOutside: h,\n    onInteractOutside: x,\n    onDismiss: _,\n    disableOutsideScroll: y,\n    allowPinchZoom: I,\n    portalled: P,\n    ...D\n  } = e,\n        S = A(\"MenuContent\", r),\n        L = O(r),\n        K = T(r),\n        G = k(r),\n        [U, V] = E.useState(null),\n        X = E.useRef(null),\n        B = m(n, X, S.onContentChange),\n        Y = E.useRef(0),\n        Z = E.useRef(\"\"),\n        z = E.useRef(0),\n        H = E.useRef(null),\n        W = E.useRef(\"right\"),\n        q = E.useRef(0),\n        N = P ? c : E.Fragment,\n        Q = y ? C : E.Fragment,\n        $ = y ? {\n    allowPinchZoom: I\n  } : void 0,\n        ee = e => {\n    var t, n;\n\n    const r = Z.current + e,\n          o = G().filter(e => !e.disabled),\n          u = document.activeElement,\n          c = null === (t = o.find(e => e.ref.current === u)) || void 0 === t ? void 0 : t.textValue,\n          a = function (e, t, n) {\n      const r = t.length > 1 && Array.from(t).every(e => e === t[0]) ? t[0] : t,\n            o = n ? e.indexOf(n) : -1;\n      let u = (c = e, a = Math.max(o, 0), c.map((e, t) => c[(a + t) % c.length]));\n      var c, a;\n      1 === r.length && (u = u.filter(e => e !== n));\n      const i = u.find(e => e.toLowerCase().startsWith(r.toLowerCase()));\n      return i !== n ? i : void 0;\n    }(o.map(e => e.textValue), r, c),\n          i = null === (n = o.find(e => e.textValue === a)) || void 0 === n ? void 0 : n.ref.current;\n\n    !function e(t) {\n      Z.current = t, window.clearTimeout(Y.current), \"\" !== t && (Y.current = window.setTimeout(() => e(\"\"), 1e3));\n    }(r), i && setTimeout(() => i.focus());\n  };\n\n  E.useEffect(() => () => window.clearTimeout(Y.current), []), t();\n  const te = E.useCallback(e => {\n    var t, n;\n    return W.current === (null === (t = H.current) || void 0 === t ? void 0 : t.side) && function (e, t) {\n      if (!t) return !1;\n      return function (e, t) {\n        const {\n          x: n,\n          y: r\n        } = e;\n        let o = !1;\n\n        for (let e = 0, u = t.length - 1; e < t.length; u = e++) {\n          const c = t[e].x,\n                a = t[e].y,\n                i = t[u].x,\n                s = t[u].y;\n          a > r != s > r && n < (i - c) * (r - a) / (s - a) + c && (o = !o);\n        }\n\n        return o;\n      }({\n        x: e.clientX,\n        y: e.clientY\n      }, t);\n    }(e, null === (n = H.current) || void 0 === n ? void 0 : n.area);\n  }, []);\n  /*#__PURE__*/\n\n  return E.createElement(N, null, /*#__PURE__*/E.createElement(Q, $, /*#__PURE__*/E.createElement(F, {\n    scope: r,\n    searchRef: Z,\n    onItemEnter: E.useCallback(e => {\n      te(e) && e.preventDefault();\n    }, [te]),\n    onItemLeave: E.useCallback(e => {\n      var t;\n      te(e) || (null === (t = X.current) || void 0 === t || t.focus(), V(null));\n    }, [te]),\n    onTriggerLeave: E.useCallback(e => {\n      te(e) && e.preventDefault();\n    }, [te]),\n    pointerGraceTimerRef: z,\n    onPointerGraceIntentChange: E.useCallback(e => {\n      H.current = e;\n    }, [])\n  }, /*#__PURE__*/E.createElement(d, {\n    asChild: !0,\n    trapped: i,\n    onMountAutoFocus: M(s, e => {\n      var t;\n      e.preventDefault(), null === (t = X.current) || void 0 === t || t.focus();\n    }),\n    onUnmountAutoFocus: l\n  }, /*#__PURE__*/E.createElement(p, {\n    asChild: !0,\n    disableOutsidePointerEvents: f,\n    onEscapeKeyDown: v,\n    onPointerDownOutside: g,\n    onFocusOutside: h,\n    onInteractOutside: x,\n    onDismiss: _\n  }, /*#__PURE__*/E.createElement(o.Root, w({\n    asChild: !0\n  }, K, {\n    dir: S.dir,\n    orientation: \"vertical\",\n    loop: u,\n    currentTabStopId: U,\n    onCurrentTabStopIdChange: V,\n    onEntryFocus: e => {\n      S.isUsingKeyboardRef.current || e.preventDefault();\n    }\n  }), /*#__PURE__*/E.createElement(a.Content, w({\n    role: \"menu\",\n    dir: S.dir,\n    \"data-state\": j(S.open)\n  }, L, D, {\n    ref: B,\n    style: {\n      outline: \"none\",\n      ...D.style\n    },\n    onKeyDown: M(D.onKeyDown, e => {\n      const t = e.target,\n            n = e.currentTarget.contains(t),\n            r = e.ctrlKey || e.altKey || e.metaKey;\n      n && !r && 1 === e.key.length && ee(e.key), \"Tab\" === e.key && e.preventDefault();\n      const o = X.current;\n      if (e.target !== o) return;\n      if (!R.includes(e.key)) return;\n      e.preventDefault();\n      const u = G().filter(e => !e.disabled).map(e => e.ref.current);\n      b.includes(e.key) && u.reverse(), function (e) {\n        const t = document.activeElement;\n\n        for (const n of e) {\n          if (n === t) return;\n          if (n.focus(), document.activeElement !== t) return;\n        }\n      }(u);\n    }),\n    onBlur: M(e.onBlur, e => {\n      e.currentTarget.contains(e.target) || (window.clearTimeout(Y.current), Z.current = \"\");\n    }),\n    onPointerMove: M(e.onPointerMove, J(e => {\n      const t = e.target,\n            n = q.current !== e.clientX;\n\n      if (e.currentTarget.contains(t) && n) {\n        const t = e.clientX > q.current ? \"right\" : \"left\";\n        W.current = t, q.current = e.clientX;\n      }\n    }))\n  }))))))));\n});\nexport const MenuGroup = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    __scopeMenu: n,\n    ...r\n  } = e;\n  /*#__PURE__*/\n\n  return E.createElement(s.div, w({\n    role: \"group\"\n  }, r, {\n    ref: t\n  }));\n});\n/*#__PURE__*/\n\nexport const MenuLabel = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    __scopeMenu: n,\n    ...r\n  } = e;\n  /*#__PURE__*/\n\n  return E.createElement(s.div, w({}, r, {\n    ref: t\n  }));\n});\n/*#__PURE__*/\n\nexport const MenuItem = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    disabled: n = !1,\n    onSelect: r,\n    ...o\n  } = e,\n        u = E.useRef(null),\n        c = A(\"MenuItem\", e.__scopeMenu),\n        a = K(\"MenuItem\", e.__scopeMenu),\n        i = m(t, u),\n        s = E.useRef(!1);\n  /*#__PURE__*/\n\n  return E.createElement(Y, w({}, o, {\n    ref: i,\n    disabled: n,\n    onClick: M(e.onClick, () => {\n      const e = u.current;\n\n      if (!n && e) {\n        const t = new Event(\"menu.itemSelect\", {\n          bubbles: !0,\n          cancelable: !0\n        });\n        e.addEventListener(\"menu.itemSelect\", e => null == r ? void 0 : r(e), {\n          once: !0\n        }), e.dispatchEvent(t), t.defaultPrevented ? s.current = !1 : c.onRootClose();\n      }\n    }),\n    onPointerDown: t => {\n      var n;\n      null === (n = e.onPointerDown) || void 0 === n || n.call(e, t), s.current = !0;\n    },\n    onPointerUp: M(e.onPointerUp, e => {\n      var t;\n      s.current || null === (t = e.currentTarget) || void 0 === t || t.click();\n    }),\n    onKeyDown: M(e.onKeyDown, e => {\n      const t = \"\" !== a.searchRef.current;\n      n || t && \" \" === e.key || x.includes(e.key) && (e.currentTarget.click(), e.preventDefault());\n    })\n  }));\n});\n/*#__PURE__*/\n\nexport const MenuSubTrigger = /*#__PURE__*/E.forwardRef((e, t) => {\n  const n = A(\"MenuSubTrigger\", e.__scopeMenu),\n        r = K(\"MenuSubTrigger\", e.__scopeMenu),\n        o = E.useRef(null),\n        {\n    pointerGraceTimerRef: u,\n    onPointerGraceIntentChange: c\n  } = r,\n        a = E.useCallback(() => {\n    o.current && window.clearTimeout(o.current), o.current = null;\n  }, []);\n  return E.useEffect(() => a, [a]), E.useEffect(() => {\n    const e = u.current;\n    return () => {\n      window.clearTimeout(e), c(null);\n    };\n  }, [u, c]), n.isSubmenu ? /*#__PURE__*/E.createElement(MenuAnchor, w({\n    asChild: !0\n  }, e), /*#__PURE__*/E.createElement(Y, w({\n    id: n.triggerId,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": n.open,\n    \"aria-controls\": n.contentId,\n    \"data-state\": j(n.open)\n  }, e, {\n    ref: v(t, n.onTriggerChange),\n    onClick: t => {\n      var r;\n      null === (r = e.onClick) || void 0 === r || r.call(e, t), e.disabled || t.defaultPrevented || (t.currentTarget.focus(), n.open || n.onOpenChange(!0));\n    },\n    onPointerMove: M(e.onPointerMove, J(t => {\n      r.onItemEnter(t), t.defaultPrevented || e.disabled || n.open || o.current || (r.onPointerGraceIntentChange(null), o.current = window.setTimeout(() => {\n        n.onOpenChange(!0), a();\n      }, 100));\n    })),\n    onPointerLeave: M(e.onPointerLeave, J(e => {\n      var t;\n      a();\n      const o = null === (t = n.content) || void 0 === t ? void 0 : t.getBoundingClientRect();\n\n      if (o) {\n        var c;\n        const t = null === (c = n.content) || void 0 === c ? void 0 : c.dataset.side,\n              a = \"right\" === t,\n              i = a ? -5 : 5,\n              s = o[a ? \"left\" : \"right\"],\n              l = o[a ? \"right\" : \"left\"];\n        r.onPointerGraceIntentChange({\n          area: [{\n            x: e.clientX + i,\n            y: e.clientY\n          }, {\n            x: s,\n            y: o.top\n          }, {\n            x: l,\n            y: o.top\n          }, {\n            x: l,\n            y: o.bottom\n          }, {\n            x: s,\n            y: o.bottom\n          }],\n          side: t\n        }), window.clearTimeout(u.current), u.current = window.setTimeout(() => r.onPointerGraceIntentChange(null), 300);\n      } else {\n        if (r.onTriggerLeave(e), e.defaultPrevented) return;\n        r.onPointerGraceIntentChange(null);\n      }\n    })),\n    onKeyDown: M(e.onKeyDown, t => {\n      const o = \"\" !== r.searchRef.current;\n      var u;\n      e.disabled || o && \" \" === t.key || _[n.dir].includes(t.key) && (n.onOpenChange(!0), null === (u = n.content) || void 0 === u || u.focus(), t.preventDefault());\n    })\n  }))) : null;\n});\n/*#__PURE__*/\n\nconst Y = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    __scopeMenu: n,\n    disabled: r = !1,\n    textValue: u,\n    ...c\n  } = e,\n        a = K(\"MenuItem\", n),\n        i = T(n),\n        l = E.useRef(null),\n        d = m(t, l),\n        [p, f] = E.useState(\"\");\n  return E.useEffect(() => {\n    const e = l.current;\n    var t;\n    e && f((null !== (t = e.textContent) && void 0 !== t ? t : \"\").trim());\n  }, [c.children]), /*#__PURE__*/E.createElement(I.ItemSlot, {\n    scope: n,\n    disabled: r,\n    textValue: null != u ? u : p\n  }, /*#__PURE__*/E.createElement(o.Item, w({\n    asChild: !0\n  }, i, {\n    focusable: !r\n  }), /*#__PURE__*/E.createElement(s.div, w({\n    role: \"menuitem\",\n    \"aria-disabled\": r || void 0,\n    \"data-disabled\": r ? \"\" : void 0\n  }, c, {\n    ref: d,\n    onPointerMove: M(e.onPointerMove, J(e => {\n      if (r) a.onItemLeave(e);else if (a.onItemEnter(e), !e.defaultPrevented) {\n        e.currentTarget.focus();\n      }\n    })),\n    onPointerLeave: M(e.onPointerLeave, J(e => a.onItemLeave(e)))\n  }))));\n});\nexport const MenuCheckboxItem = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    checked: n = !1,\n    onCheckedChange: r,\n    ...o\n  } = e;\n  /*#__PURE__*/\n\n  return E.createElement(H, {\n    scope: e.__scopeMenu,\n    checked: n\n  }, /*#__PURE__*/E.createElement(MenuItem, w({\n    role: \"menuitemcheckbox\",\n    \"aria-checked\": n\n  }, o, {\n    ref: t,\n    \"data-state\": q(n),\n    onSelect: M(o.onSelect, () => null == r ? void 0 : r(!n), {\n      checkForDefaultPrevented: !1\n    })\n  })));\n});\n/*#__PURE__*/\n\nconst [Z, z] = D(\"MenuRadioGroup\", {\n  value: void 0,\n  onValueChange: () => {}\n});\nexport const MenuRadioGroup = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    value: r,\n    onValueChange: o,\n    ...u\n  } = e,\n        c = n(o);\n  /*#__PURE__*/\n\n  return E.createElement(Z, {\n    scope: e.__scopeMenu,\n    value: r,\n    onValueChange: c\n  }, /*#__PURE__*/E.createElement(MenuGroup, w({}, u, {\n    ref: t\n  })));\n});\n/*#__PURE__*/\n\nexport const MenuRadioItem = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    value: n,\n    ...r\n  } = e,\n        o = z(\"MenuRadioItem\", e.__scopeMenu),\n        u = n === o.value;\n  /*#__PURE__*/\n\n  return E.createElement(H, {\n    scope: e.__scopeMenu,\n    checked: u\n  }, /*#__PURE__*/E.createElement(MenuItem, w({\n    role: \"menuitemradio\",\n    \"aria-checked\": u\n  }, r, {\n    ref: t,\n    \"data-state\": q(u),\n    onSelect: M(r.onSelect, () => {\n      var e;\n      return null === (e = o.onValueChange) || void 0 === e ? void 0 : e.call(o, n);\n    }, {\n      checkForDefaultPrevented: !1\n    })\n  })));\n});\n/*#__PURE__*/\n\nconst [H, W] = D(\"MenuItemIndicator\", {\n  checked: !1\n});\nexport const MenuItemIndicator = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    __scopeMenu: n,\n    forceMount: r,\n    ...o\n  } = e,\n        u = W(\"MenuItemIndicator\", n);\n  /*#__PURE__*/\n\n  return E.createElement(l, {\n    present: r || u.checked\n  }, /*#__PURE__*/E.createElement(s.span, w({}, o, {\n    ref: t,\n    \"data-state\": q(u.checked)\n  })));\n});\n/*#__PURE__*/\n\nexport const MenuSeparator = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    __scopeMenu: n,\n    ...r\n  } = e;\n  /*#__PURE__*/\n\n  return E.createElement(s.div, w({\n    role: \"separator\",\n    \"aria-orientation\": \"horizontal\"\n  }, r, {\n    ref: t\n  }));\n});\n/*#__PURE__*/\n\nexport const MenuArrow = /*#__PURE__*/E.forwardRef((e, t) => {\n  const {\n    __scopeMenu: n,\n    ...r\n  } = e,\n        o = O(n);\n  /*#__PURE__*/\n\n  return E.createElement(a.Arrow, w({}, o, r, {\n    ref: t\n  }));\n});\n/*#__PURE__*/\n\nfunction j(e) {\n  return e ? \"open\" : \"closed\";\n}\n\nfunction q(e) {\n  return e ? \"checked\" : \"unchecked\";\n}\n\nfunction J(e) {\n  return t => \"mouse\" === t.pointerType ? e(t) : void 0;\n}\n\nexport const Root = Menu;\nexport const Sub = MenuSub;\nexport const Anchor = MenuAnchor;\nexport const SubTrigger = MenuSubTrigger;\nexport const Content = MenuContent;\nexport const Group = MenuGroup;\nexport const Label = MenuLabel;\nexport const Item = MenuItem;\nexport const CheckboxItem = MenuCheckboxItem;\nexport const RadioGroup = MenuRadioGroup;\nexport const RadioItem = MenuRadioItem;\nexport const ItemIndicator = MenuItemIndicator;\nexport const Separator = MenuSeparator;\nexport const Arrow = MenuArrow;","map":{"version":3,"mappings":"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","names":["SELECTION_KEYS","LAST_KEYS","FIRST_LAST_KEYS","SUB_OPEN_KEYS","ltr","rtl","SUB_CLOSE_KEYS","Collection","useCollection","createCollectionScope","createCollection","createMenuContext","createMenuScope","createContextScope","createPopperScope","createRovingFocusGroupScope","usePopperScope","useRovingFocusGroupScope","MenuProvider","useMenuContext","Menu","props","__scopeMenu","open","children","onOpenChange","modal","popperScope","content","setContent","React","useState","isUsingKeyboardRef","useRef","handleOpenChange","useCallbackRef","computedDirection","useDirection","dir","useEffect","handleKeyDown","current","handlePointer","document","addEventListener","capture","removeEventListener","_react","_radixUiReactPopper","Root","$e9e2cf92950df0b951e7bac95d18$var$MenuProvider","scope","isSubmenu","onContentChange","onRootClose","useCallback","MenuSub","parentMenuContext","trigger","setTrigger","contentId","useId","onTriggerChange","triggerId","MenuAnchor","forwardRef","forwardedRef","anchorProps","Anchor","_babelRuntimeHelpersEsmExtends","ref","MenuContentProvider","useMenuContentContext","MenuContent","forceMount","contentProps","context","$e9e2cf92950df0b951e7bac95d18$var$Collection","Provider","Presence","present","Slot","$e9e2cf92950df0b951e7bac95d18$var$MenuSubContent","$e9e2cf92950df0b951e7bac95d18$var$MenuRootContent","MenuRootContent","$e9e2cf92950df0b951e7bac95d18$var$MenuRootContentModal","$e9e2cf92950df0b951e7bac95d18$var$MenuRootContentNonModal","MenuRootContentModal","composedRefs","useComposedRefs","hideOthers","$e9e2cf92950df0b951e7bac95d18$var$MenuContentImpl","trapFocus","disableOutsidePointerEvents","disableOutsideScroll","onFocusOutside","composeEventHandlers","event","preventDefault","checkForDefaultPrevented","onDismiss","MenuRootContentNonModal","MenuSubContent","id","align","side","portalled","onOpenAutoFocus","_ref$current","focus","onCloseAutoFocus","target","onEscapeKeyDown","onKeyDown","isKeyDownInside","currentTarget","contains","isCloseKey","includes","key","_context$trigger","MenuContentImpl","loop","onPointerDownOutside","onInteractOutside","allowPinchZoom","rovingFocusGroupScope","getItems","currentItemId","setCurrentItemId","contentRef","timerRef","searchRef","pointerGraceTimerRef","pointerGraceIntentRef","pointerDirRef","lastPointerXRef","PortalWrapper","Portal","Fragment","ScrollLockWrapper","RemoveScroll","scrollLockWrapperProps","undefined","handleTypeaheadSearch","search","items","filter","item","disabled","currentItem","activeElement","currentMatch","find","_items$find","textValue","nextMatch","values","normalizedSearch","length","Array","from","every","char","currentMatchIndex","indexOf","wrappedValues","array","startIndex","Math","max","map","_","index","v","value","toLowerCase","startsWith","getNextMatch","newItem","_items$find2","updateSearch","window","clearTimeout","setTimeout","useFocusGuards","isPointerMovingToSubmenu","_pointerGraceIntentRe","area","point","polygon","x","y","inside","i","j","xi","yi","xj","yj","isPointInPolygon","clientX","clientY","isPointerInGraceArea","_pointerGraceIntentRe2","$e9e2cf92950df0b951e7bac95d18$var$MenuContentProvider","onItemEnter","onItemLeave","_contentRef$current","onTriggerLeave","onPointerGraceIntentChange","intent","FocusScope","asChild","trapped","onMountAutoFocus","_contentRef$current2","onUnmountAutoFocus","DismissableLayer","_radixUiReactRovingFocus","orientation","currentTabStopId","onCurrentTabStopIdChange","onEntryFocus","Content","role","getOpenState","style","outline","isModifierKey","ctrlKey","altKey","metaKey","candidateNodes","reverse","candidates","PREVIOUSLY_FOCUSED_ELEMENT","candidate","focusFirst","onBlur","onPointerMove","whenMouse","pointerXHasChanged","newDir","MenuGroup","groupProps","Primitive","div","MenuLabel","labelProps","MenuItem","onSelect","itemProps","contentContext","isPointerDownRef","$e9e2cf92950df0b951e7bac95d18$var$MenuItemImpl","onClick","menuItem","itemSelectEvent","Event","bubbles","cancelable","once","dispatchEvent","defaultPrevented","onPointerDown","_props$onPointerDown","onPointerUp","_event$currentTarget","click","isTypingAhead","MenuSubTrigger","openTimerRef","clearOpenTimer","pointerGraceTimer","composeRefs","_props$onClick","onPointerLeave","contentRect","_context$content","getBoundingClientRect","_context$content2","dataset","rightSide","bleed","contentNearEdge","contentFarEdge","top","bottom","_context$content3","MenuItemImpl","textContent","setTextContent","_menuItem$textContent","trim","ItemSlot","Item","focusable","MenuCheckboxItem","checked","onCheckedChange","checkboxItemProps","$e9e2cf92950df0b951e7bac95d18$var$ItemIndicatorProvider","getCheckedState","RadioGroupProvider","useRadioGroupContext","onValueChange","MenuRadioGroup","handleValueChange","$e9e2cf92950df0b951e7bac95d18$var$RadioGroupProvider","MenuRadioItem","radioItemProps","_context$onValueChang","ItemIndicatorProvider","useItemIndicatorContext","MenuItemIndicator","itemIndicatorProps","indicatorContext","span","MenuSeparator","separatorProps","MenuArrow","arrowProps","Arrow","handler","pointerType","Sub","SubTrigger","Group","Label","CheckboxItem","RadioGroup","RadioItem","ItemIndicator","Separator"],"sources":["/Users/angelinadeo/thehacktrical/NYUhack/node_modules/@radix-ui/react-menu/dist/packages/react/menu/src/Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs, composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal } from '@radix-ui/react-portal';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-use-direction';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst SELECTION_KEYS = ['Enter', ' '];\nconst FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n};\nconst SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'Menu';\n\ntype ItemData = { disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenuItemElement,\n  ItemData\n>(MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenu?: Scope };\nconst [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [\n  createCollectionScope,\n  createPopperScope,\n  createRovingFocusGroupScope,\n]);\nconst usePopperScope = createPopperScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenuRootContextValue = {\n  isSubmenu: false;\n  isUsingKeyboardRef: React.RefObject<boolean>;\n  dir: Direction;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  content: MenuContentElement | null;\n  onContentChange(content: MenuContentElement | null): void;\n  onRootClose(): void;\n  modal: boolean;\n};\n\ntype MenuSubContextValue = Omit<MenuRootContextValue, 'isSubmenu'> & {\n  isSubmenu: true;\n  contentId: string;\n  triggerId: string;\n  trigger: MenuSubTriggerElement | null;\n  onTriggerChange(trigger: MenuSubTriggerElement | null): void;\n};\n\nconst [MenuProvider, useMenuContext] = createMenuContext<\n  MenuRootContextValue | MenuSubContextValue\n>(MENU_NAME);\n\ninterface MenuProps {\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n  children?: React.ReactNode;\n}\n\nconst Menu: React.FC<MenuProps> = (props: ScopedProps<MenuProps>) => {\n  const { __scopeMenu, open = false, children, onOpenChange, modal = true } = props;\n  const popperScope = usePopperScope(__scopeMenu);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const isUsingKeyboardRef = React.useRef(false);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n  const computedDirection = useDirection(content, props.dir);\n\n  React.useEffect(() => {\n    const handleKeyDown = () => (isUsingKeyboardRef.current = true);\n    const handlePointer = () => (isUsingKeyboardRef.current = false);\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    document.addEventListener('keydown', handleKeyDown, { capture: true });\n    document.addEventListener('pointerdown', handlePointer, { capture: true });\n    document.addEventListener('pointermove', handlePointer, { capture: true });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, { capture: true });\n      document.removeEventListener('pointerdown', handlePointer, { capture: true });\n      document.removeEventListener('pointermove', handlePointer, { capture: true });\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        isSubmenu={false}\n        isUsingKeyboardRef={isUsingKeyboardRef}\n        dir={computedDirection}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n        onRootClose={React.useCallback(() => handleOpenChange(false), [handleOpenChange])}\n        modal={modal}\n      >\n        {children}\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenu.displayName = MENU_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst SUB_NAME = 'MenuSub';\n\ninterface MenuSubProps {\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  children?: React.ReactNode;\n}\n\nconst MenuSub: React.FC<MenuSubProps> = (props: ScopedProps<MenuSubProps>) => {\n  const { __scopeMenu, children, open = false, onOpenChange } = props;\n  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);\n  const popperScope = usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = React.useState<MenuSubTriggerElement | null>(null);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n\n  // Prevent the parent menu from reopening with open submenus.\n  React.useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        isSubmenu={true}\n        isUsingKeyboardRef={parentMenuContext.isUsingKeyboardRef}\n        dir={parentMenuContext.dir}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n        onRootClose={parentMenuContext.onRootClose}\n        contentId={useId()}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        triggerId={useId()}\n        modal={false}\n      >\n        {children}\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'MenuAnchor';\n\ntype MenuAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst MenuAnchor = React.forwardRef<MenuAnchorElement, MenuAnchorProps>(\n  (props: ScopedProps<MenuAnchorProps>, forwardedRef) => {\n    const { __scopeMenu, ...anchorProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nMenuAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenuContent';\n\ntype MenuContentContextValue = {\n  onItemEnter(event: React.PointerEvent): void;\n  onItemLeave(event: React.PointerEvent): void;\n  onTriggerLeave(event: React.PointerEvent): void;\n  searchRef: React.RefObject<string>;\n  pointerGraceTimerRef: React.MutableRefObject<number>;\n  onPointerGraceIntentChange(intent: GraceIntent | null): void;\n};\nconst [MenuContentProvider, useMenuContentContext] =\n  createMenuContext<MenuContentContextValue>(CONTENT_NAME);\n\ntype MenuContentElement = MenuRootContentElement | MenuSubContentElement;\n/**\n * We purposefully don't union MenuRootContent and MenuSubContent props here because\n * they have conflicting prop types. We agreed that we would allow MenuSubContent to\n * accept props that it would just ignore.\n */\ninterface MenuContentProps extends MenuRootContentProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuContent = React.forwardRef<MenuContentElement, MenuContentProps>(\n  (props: ScopedProps<MenuContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            {context.isSubmenu ? (\n              <MenuSubContent {...contentProps} ref={forwardedRef} />\n            ) : (\n              <MenuRootContent {...contentProps} ref={forwardedRef} />\n            )}\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuRootContentElement = MenuRootContentTypeElement;\ninterface MenuRootContentProps\n  extends Omit<MenuRootContentTypeProps, keyof MenuContentImplPrivateProps> {}\n\nconst MenuRootContent = React.forwardRef<MenuRootContentElement, MenuRootContentProps>(\n  (props: ScopedProps<MenuRootContentProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    return context.modal ? (\n      <MenuRootContentModal {...props} ref={forwardedRef} />\n    ) : (\n      <MenuRootContentNonModal {...props} ref={forwardedRef} />\n    );\n  }\n);\n\ntype MenuRootContentTypeElement = MenuContentImplElement;\ninterface MenuRootContentTypeProps\n  extends Omit<\n    MenuContentImplProps,\n    'trapFocus' | 'disableOutsidePointerEvents' | 'disableOutsideScroll'\n  > {}\n\nconst MenuRootContentModal = React.forwardRef<MenuRootContentTypeElement, MenuRootContentTypeProps>(\n  (props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuRootContentTypeElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // Hide everything from ARIA except the `MenuContent`\n    React.useEffect(() => {\n      const content = ref.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <MenuContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure we're not trapping once it's been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        // make sure to only disable pointer events when open\n        // this avoids blocking interactions while animating out\n        disableOutsidePointerEvents={context.open}\n        disableOutsideScroll\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )}\n        onDismiss={() => context.onOpenChange(false)}\n      />\n    );\n  }\n);\n\nconst MenuRootContentNonModal = React.forwardRef<\n  MenuRootContentTypeElement,\n  MenuRootContentTypeProps\n>((props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n  const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n  return (\n    <MenuContentImpl\n      {...props}\n      ref={forwardedRef}\n      trapFocus={false}\n      disableOutsidePointerEvents={false}\n      disableOutsideScroll={false}\n      onDismiss={() => context.onOpenChange(false)}\n    />\n  );\n});\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuSubContentElement = MenuContentImplElement;\ninterface MenuSubContentProps\n  extends Omit<\n    MenuContentImplProps,\n    | keyof MenuContentImplPrivateProps\n    | 'align'\n    | 'side'\n    | 'portalled'\n    | 'disabledOutsidePointerEvents'\n    | 'disableOutsideScroll'\n    | 'trapFocus'\n    | 'onCloseAutoFocus'\n  > {}\n\nconst MenuSubContent = React.forwardRef<MenuSubContentElement, MenuSubContentProps>(\n  (props: ScopedProps<MenuSubContentProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuSubContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    return context.isSubmenu ? (\n      <MenuContentImpl\n        id={context.contentId}\n        aria-labelledby={context.triggerId}\n        {...props}\n        ref={composedRefs}\n        align=\"start\"\n        side={context.dir === 'rtl' ? 'left' : 'right'}\n        portalled\n        disableOutsidePointerEvents={false}\n        disableOutsideScroll={false}\n        trapFocus={false}\n        onOpenAutoFocus={(event) => {\n          // when opening a submenu, focus content for keyboard users only\n          if (context.isUsingKeyboardRef.current) ref.current?.focus();\n          event.preventDefault();\n        }}\n        // The menu might close because of focusing another menu item in the parent menu. We\n        // don't want it to refocus the trigger in that case so we handle trigger focus ourselves.\n        onCloseAutoFocus={(event) => event.preventDefault()}\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n          // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n          // on pointer interaction.\n          if (event.target !== context.trigger) context.onOpenChange(false);\n        })}\n        onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, context.onRootClose)}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          // Submenu key events bubble through portals. We only care about keys in this menu.\n          const isKeyDownInside = event.currentTarget.contains(event.target as HTMLElement);\n          const isCloseKey = SUB_CLOSE_KEYS[context.dir].includes(event.key);\n          if (isKeyDownInside && isCloseKey) {\n            context.onOpenChange(false);\n            // We focus manually because we prevented it in `onCloseAutoFocus`\n            context.trigger?.focus();\n            // prevent window from scrolling\n            event.preventDefault();\n          }\n        })}\n      />\n    ) : null;\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype RemoveScrollProps = React.ComponentProps<typeof RemoveScroll>;\ntype MenuContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ntype MenuContentImplPrivateProps = {\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n  onDismiss?: DismissableLayerProps['onDismiss'];\n};\ninterface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n    PopperContentProps,\n    Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n\n  /**\n   * @see https://github.com/theKashey/react-remove-scroll#usage\n   */\n  allowPinchZoom?: RemoveScrollProps['allowPinchZoom'];\n\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * (default: `false`)\n   */\n  disableOutsideScroll?: boolean;\n\n  /**\n   * The direction of navigation between menu items.\n   * @defaultValue ltr\n   */\n  dir?: RovingFocusGroupProps['dir'];\n\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: RovingFocusGroupProps['loop'];\n\n  /**\n   * Whether the `MenuContent` should render in a `Portal`\n   * (default: `true`)\n   */\n  portalled?: boolean;\n}\n\nconst MenuContentImpl = React.forwardRef<MenuContentImplElement, MenuContentImplProps>(\n  (props: ScopedProps<MenuContentImplProps>, forwardedRef) => {\n    const {\n      __scopeMenu,\n      loop = false,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      disableOutsideScroll,\n      allowPinchZoom,\n      portalled,\n      ...contentProps\n    } = props;\n    const context = useMenuContext(CONTENT_NAME, __scopeMenu);\n    const popperScope = usePopperScope(__scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const getItems = useCollection(__scopeMenu);\n    const [currentItemId, setCurrentItemId] = React.useState<string | null>(null);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n    const timerRef = React.useRef(0);\n    const searchRef = React.useRef('');\n    const pointerGraceTimerRef = React.useRef(0);\n    const pointerGraceIntentRef = React.useRef<GraceIntent | null>(null);\n    const pointerDirRef = React.useRef<Side>('right');\n    const lastPointerXRef = React.useRef(0);\n\n    const PortalWrapper = portalled ? Portal : React.Fragment;\n    const ScrollLockWrapper = disableOutsideScroll ? RemoveScroll : React.Fragment;\n    const scrollLockWrapperProps = disableOutsideScroll ? { allowPinchZoom } : undefined;\n\n    const handleTypeaheadSearch = (key: string) => {\n      const search = searchRef.current + key;\n      const items = getItems().filter((item) => !item.disabled);\n      const currentItem = document.activeElement;\n      const currentMatch = items.find((item) => item.ref.current === currentItem)?.textValue;\n      const values = items.map((item) => item.textValue);\n      const nextMatch = getNextMatch(values, search, currentMatch);\n      const newItem = items.find((item) => item.textValue === nextMatch)?.ref.current;\n\n      // Reset `searchRef` 1 second after it was last updated\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n\n      if (newItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (newItem as HTMLElement).focus());\n      }\n    };\n\n    React.useEffect(() => {\n      return () => window.clearTimeout(timerRef.current);\n    }, []);\n\n    // Make sure the whole tree has focus guards as our `MenuContent` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    const isPointerMovingToSubmenu = React.useCallback((event: React.PointerEvent) => {\n      const isMovingTowards = pointerDirRef.current === pointerGraceIntentRef.current?.side;\n      return isMovingTowards && isPointerInGraceArea(event, pointerGraceIntentRef.current?.area);\n    }, []);\n\n    return (\n      <PortalWrapper>\n        <ScrollLockWrapper {...scrollLockWrapperProps}>\n          <MenuContentProvider\n            scope={__scopeMenu}\n            searchRef={searchRef}\n            onItemEnter={React.useCallback(\n              (event) => {\n                if (isPointerMovingToSubmenu(event)) event.preventDefault();\n              },\n              [isPointerMovingToSubmenu]\n            )}\n            onItemLeave={React.useCallback(\n              (event) => {\n                if (isPointerMovingToSubmenu(event)) return;\n                contentRef.current?.focus();\n                setCurrentItemId(null);\n              },\n              [isPointerMovingToSubmenu]\n            )}\n            onTriggerLeave={React.useCallback(\n              (event) => {\n                if (isPointerMovingToSubmenu(event)) event.preventDefault();\n              },\n              [isPointerMovingToSubmenu]\n            )}\n            pointerGraceTimerRef={pointerGraceTimerRef}\n            onPointerGraceIntentChange={React.useCallback((intent) => {\n              pointerGraceIntentRef.current = intent;\n            }, [])}\n          >\n            <FocusScope\n              asChild\n              trapped={trapFocus}\n              onMountAutoFocus={composeEventHandlers(onOpenAutoFocus, (event) => {\n                // when opening, explicitly focus the content area only and leave\n                // `onEntryFocus` in  control of focusing first item\n                event.preventDefault();\n                contentRef.current?.focus();\n              })}\n              onUnmountAutoFocus={onCloseAutoFocus}\n            >\n              <DismissableLayer\n                asChild\n                disableOutsidePointerEvents={disableOutsidePointerEvents}\n                onEscapeKeyDown={onEscapeKeyDown}\n                onPointerDownOutside={onPointerDownOutside}\n                onFocusOutside={onFocusOutside}\n                onInteractOutside={onInteractOutside}\n                onDismiss={onDismiss}\n              >\n                <RovingFocusGroup.Root\n                  asChild\n                  {...rovingFocusGroupScope}\n                  dir={context.dir}\n                  orientation=\"vertical\"\n                  loop={loop}\n                  currentTabStopId={currentItemId}\n                  onCurrentTabStopIdChange={setCurrentItemId}\n                  onEntryFocus={(event) => {\n                    // only focus first item when using keyboard\n                    if (!context.isUsingKeyboardRef.current) event.preventDefault();\n                  }}\n                >\n                  <PopperPrimitive.Content\n                    role=\"menu\"\n                    dir={context.dir}\n                    data-state={getOpenState(context.open)}\n                    {...popperScope}\n                    {...contentProps}\n                    ref={composedRefs}\n                    style={{ outline: 'none', ...contentProps.style }}\n                    onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                      // submenu key events bubble through portals. We only care about keys in this menu.\n                      const target = event.target as HTMLElement;\n                      const isKeyDownInside = event.currentTarget.contains(target);\n                      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                      if (isKeyDownInside && !isModifierKey && event.key.length === 1) {\n                        handleTypeaheadSearch(event.key);\n                      }\n                      // menus should not be navigated using tab key so we prevent it\n                      if (event.key === 'Tab') event.preventDefault();\n                      // focus first/last item based on key pressed\n                      const content = contentRef.current;\n                      if (event.target !== content) return;\n                      if (!FIRST_LAST_KEYS.includes(event.key)) return;\n                      event.preventDefault();\n                      const items = getItems().filter((item) => !item.disabled);\n                      const candidateNodes = items.map((item) => item.ref.current!);\n                      if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n                      focusFirst(candidateNodes);\n                    })}\n                    onBlur={composeEventHandlers(props.onBlur, (event) => {\n                      // clear search buffer when leaving the menu\n                      if (!event.currentTarget.contains(event.target)) {\n                        window.clearTimeout(timerRef.current);\n                        searchRef.current = '';\n                      }\n                    })}\n                    onPointerMove={composeEventHandlers(\n                      props.onPointerMove,\n                      whenMouse((event) => {\n                        const target = event.target as HTMLElement;\n                        const pointerXHasChanged = lastPointerXRef.current !== event.clientX;\n\n                        // We don't use `event.movementX` for this check because Safari will\n                        // always return `0` on a pointer event.\n                        if (event.currentTarget.contains(target) && pointerXHasChanged) {\n                          const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n                          pointerDirRef.current = newDir;\n                          lastPointerXRef.current = event.clientX;\n                        }\n                      })\n                    )}\n                  />\n                </RovingFocusGroup.Root>\n              </DismissableLayer>\n            </FocusScope>\n          </MenuContentProvider>\n        </ScrollLockWrapper>\n      </PortalWrapper>\n    );\n  }\n);\n\nMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenuGroup';\n\ntype MenuGroupElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenuGroupProps extends PrimitiveDivProps {}\n\nconst MenuGroup = React.forwardRef<MenuGroupElement, MenuGroupProps>(\n  (props: ScopedProps<MenuGroupProps>, forwardedRef) => {\n    const { __scopeMenu, ...groupProps } = props;\n    return <Primitive.div role=\"group\" {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenuLabel';\n\ntype MenuLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuLabelProps extends PrimitiveDivProps {}\n\nconst MenuLabel = React.forwardRef<MenuLabelElement, MenuLabelProps>(\n  (props: ScopedProps<MenuLabelProps>, forwardedRef) => {\n    const { __scopeMenu, ...labelProps } = props;\n    return <Primitive.div {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenuItem';\nconst ITEM_SELECT = 'menu.itemSelect';\n\ntype MenuItemElement = MenuItemImplElement;\ninterface MenuItemProps extends Omit<MenuItemImplProps, 'onSelect'> {\n  onSelect?: (event: Event) => void;\n}\n\nconst MenuItem = React.forwardRef<MenuItemElement, MenuItemProps>(\n  (props: ScopedProps<MenuItemProps>, forwardedRef) => {\n    const { disabled = false, onSelect, ...itemProps } = props;\n    const ref = React.useRef<HTMLDivElement>(null);\n    const context = useMenuContext(ITEM_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const isPointerDownRef = React.useRef(false);\n\n    const handleSelect = () => {\n      const menuItem = ref.current;\n      if (!disabled && menuItem) {\n        const itemSelectEvent = new Event(ITEM_SELECT, { bubbles: true, cancelable: true });\n        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect?.(event), { once: true });\n        menuItem.dispatchEvent(itemSelectEvent);\n        if (itemSelectEvent.defaultPrevented) {\n          isPointerDownRef.current = false;\n        } else {\n          context.onRootClose();\n        }\n      }\n    };\n\n    return (\n      <MenuItemImpl\n        {...itemProps}\n        ref={composedRefs}\n        disabled={disabled}\n        onClick={composeEventHandlers(props.onClick, handleSelect)}\n        onPointerDown={(event) => {\n          props.onPointerDown?.(event);\n          isPointerDownRef.current = true;\n        }}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          // Pointer down can move to a different menu item which should activate it on pointer up.\n          // We dispatch a click for selection to allow composition with click based triggers and to\n          // prevent Firefox from getting stuck in text selection mode when the menu closes.\n          if (!isPointerDownRef.current) event.currentTarget?.click();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isTypingAhead = contentContext.searchRef.current !== '';\n          if (disabled || (isTypingAhead && event.key === ' ')) return;\n          if (SELECTION_KEYS.includes(event.key)) {\n            event.currentTarget.click();\n            /**\n             * We prevent default browser behaviour for selection keys as they should trigger\n             * a selection only:\n             * - prevents space from scrolling the page.\n             * - if keydown causes focus to move, prevents keydown from firing on the new target.\n             */\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenuSubTrigger';\n\ntype MenuSubTriggerElement = MenuItemImplElement;\ninterface MenuSubTriggerProps extends MenuItemImplProps {}\n\nconst MenuSubTrigger = React.forwardRef<MenuSubTriggerElement, MenuSubTriggerProps>(\n  (props: ScopedProps<MenuSubTriggerProps>, forwardedRef) => {\n    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const openTimerRef = React.useRef<number | null>(null);\n    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;\n\n    const clearOpenTimer = React.useCallback(() => {\n      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n      openTimerRef.current = null;\n    }, []);\n\n    React.useEffect(() => clearOpenTimer, [clearOpenTimer]);\n\n    React.useEffect(() => {\n      const pointerGraceTimer = pointerGraceTimerRef.current;\n      return () => {\n        window.clearTimeout(pointerGraceTimer);\n        onPointerGraceIntentChange(null);\n      };\n    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n\n    return context.isSubmenu ? (\n      <MenuAnchor asChild {...props}>\n        <MenuItemImpl\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={context.contentId}\n          data-state={getOpenState(context.open)}\n          {...props}\n          ref={composeRefs(forwardedRef, context.onTriggerChange)}\n          // This is redundant for mouse users but we cannot determine pointer type from\n          // click event and we cannot use pointerup event (see git history for reasons why)\n          onClick={(event) => {\n            props.onClick?.(event);\n            if (props.disabled || event.defaultPrevented) return;\n            /**\n             * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n             * and we rely heavily on `onFocusOutside` for submenus to close when switching\n             * between separate submenus.\n             */\n            event.currentTarget.focus();\n            if (!context.open) context.onOpenChange(true);\n          }}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            whenMouse((event) => {\n              contentContext.onItemEnter(event);\n              if (event.defaultPrevented) return;\n              if (!props.disabled && !context.open && !openTimerRef.current) {\n                contentContext.onPointerGraceIntentChange(null);\n                openTimerRef.current = window.setTimeout(() => {\n                  context.onOpenChange(true);\n                  clearOpenTimer();\n                }, 100);\n              }\n            })\n          )}\n          onPointerLeave={composeEventHandlers(\n            props.onPointerLeave,\n            whenMouse((event) => {\n              clearOpenTimer();\n\n              const contentRect = context.content?.getBoundingClientRect();\n              if (contentRect) {\n                // TODO: make sure to update this when we change positioning logic\n                const side = context.content?.dataset.side as Side;\n                const rightSide = side === 'right';\n                const bleed = rightSide ? -5 : +5;\n                const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n                const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n\n                contentContext.onPointerGraceIntentChange({\n                  area: [\n                    // Apply a bleed on clientX to ensure that our exit point is\n                    // consistently within polygon bounds\n                    { x: event.clientX + bleed, y: event.clientY },\n                    { x: contentNearEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.bottom },\n                    { x: contentNearEdge, y: contentRect.bottom },\n                  ],\n                  side,\n                });\n\n                window.clearTimeout(pointerGraceTimerRef.current);\n                pointerGraceTimerRef.current = window.setTimeout(\n                  () => contentContext.onPointerGraceIntentChange(null),\n                  300\n                );\n              } else {\n                contentContext.onTriggerLeave(event);\n                if (event.defaultPrevented) return;\n\n                // There's 100ms where the user may leave an item before the submenu was opened.\n                contentContext.onPointerGraceIntentChange(null);\n              }\n            })\n          )}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isTypingAhead = contentContext.searchRef.current !== '';\n            if (props.disabled || (isTypingAhead && event.key === ' ')) return;\n            if (SUB_OPEN_KEYS[context.dir].includes(event.key)) {\n              context.onOpenChange(true);\n              // The trigger may hold focus if opened via pointer interaction\n              // so we ensure content is given focus again when switching to keyboard.\n              context.content?.focus();\n              // prevent window from scrolling\n              event.preventDefault();\n            }\n          })}\n        />\n      </MenuAnchor>\n    ) : null;\n  }\n);\n\nMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuItemImplElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuItemImplProps extends PrimitiveDivProps {\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst MenuItemImpl = React.forwardRef<MenuItemImplElement, MenuItemImplProps>(\n  (props: ScopedProps<MenuItemImplProps>, forwardedRef) => {\n    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;\n    const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const ref = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // get the item's `.textContent` as default strategy for typeahead `textValue`\n    const [textContent, setTextContent] = React.useState('');\n    React.useEffect(() => {\n      const menuItem = ref.current;\n      if (menuItem) {\n        setTextContent((menuItem.textContent ?? '').trim());\n      }\n    }, [itemProps.children]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeMenu}\n        disabled={disabled}\n        textValue={textValue ?? textContent}\n      >\n        <RovingFocusGroup.Item asChild {...rovingFocusGroupScope} focusable={!disabled}>\n          <Primitive.div\n            role=\"menuitem\"\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            {...itemProps}\n            ref={composedRefs}\n            /**\n             * We focus items on `pointerMove` to achieve the following:\n             *\n             * - Mouse over an item (it focuses)\n             * - Leave mouse where it is and use keyboard to focus a different item\n             * - Wiggle mouse without it leaving previously focused item\n             * - Previously focused item should re-focus\n             *\n             * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n             * wiggles. This is to match native menu implementation.\n             */\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse((event) => {\n                if (disabled) {\n                  contentContext.onItemLeave(event);\n                } else {\n                  contentContext.onItemEnter(event);\n                  if (!event.defaultPrevented) {\n                    const item = event.currentTarget;\n                    item.focus();\n                  }\n                }\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse((event) => contentContext.onItemLeave(event))\n            )}\n          />\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\n\ntype MenuCheckboxItemElement = MenuItemElement;\ninterface MenuCheckboxItemProps extends MenuItemProps {\n  checked?: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst MenuCheckboxItem = React.forwardRef<MenuCheckboxItemElement, MenuCheckboxItemProps>(\n  (props: ScopedProps<MenuCheckboxItemProps>, forwardedRef) => {\n    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemcheckbox\"\n          aria-checked={checked}\n          {...checkboxItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            checkboxItemProps.onSelect,\n            () => onCheckedChange?.(!checked),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenuRadioGroup';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createMenuContext<MenuRadioGroupProps>(\n  RADIO_GROUP_NAME,\n  { value: undefined, onValueChange: () => {} }\n);\n\ntype MenuRadioGroupElement = React.ElementRef<typeof MenuGroup>;\ninterface MenuRadioGroupProps extends MenuGroupProps {\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst MenuRadioGroup = React.forwardRef<MenuRadioGroupElement, MenuRadioGroupProps>(\n  (props: ScopedProps<MenuRadioGroupProps>, forwardedRef) => {\n    const { value, onValueChange, ...groupProps } = props;\n    const handleValueChange = useCallbackRef(onValueChange);\n    return (\n      <RadioGroupProvider scope={props.__scopeMenu} value={value} onValueChange={handleValueChange}>\n        <MenuGroup {...groupProps} ref={forwardedRef} />\n      </RadioGroupProvider>\n    );\n  }\n);\n\nMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenuRadioItem';\n\ntype MenuRadioItemElement = React.ElementRef<typeof MenuItem>;\ninterface MenuRadioItemProps extends MenuItemProps {\n  value: string;\n}\n\nconst MenuRadioItem = React.forwardRef<MenuRadioItemElement, MenuRadioItemProps>(\n  (props: ScopedProps<MenuRadioItemProps>, forwardedRef) => {\n    const { value, ...radioItemProps } = props;\n    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);\n    const checked = value === context.value;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemradio\"\n          aria-checked={checked}\n          {...radioItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            radioItemProps.onSelect,\n            () => context.onValueChange?.(value),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'MenuItemIndicator';\n\nconst [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext(ITEM_INDICATOR_NAME, {\n  checked: false,\n});\n\ntype MenuItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface MenuItemIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuItemIndicator = React.forwardRef<MenuItemIndicatorElement, MenuItemIndicatorProps>(\n  (props: ScopedProps<MenuItemIndicatorProps>, forwardedRef) => {\n    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;\n    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);\n    return (\n      <Presence present={forceMount || indicatorContext.checked}>\n        <Primitive.span\n          {...itemIndicatorProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(indicatorContext.checked)}\n        />\n      </Presence>\n    );\n  }\n);\n\nMenuItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenuSeparator';\n\ntype MenuSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuSeparatorProps extends PrimitiveDivProps {}\n\nconst MenuSeparator = React.forwardRef<MenuSeparatorElement, MenuSeparatorProps>(\n  (props: ScopedProps<MenuSeparatorProps>, forwardedRef) => {\n    const { __scopeMenu, ...separatorProps } = props;\n    return (\n      <Primitive.div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...separatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenuArrow';\n\ntype MenuArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface MenuArrowProps extends PopperArrowProps {}\n\nconst MenuArrow = React.forwardRef<MenuArrowElement, MenuArrowProps>(\n  (props: ScopedProps<MenuArrowProps>, forwardedRef) => {\n    const { __scopeMenu, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenuArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction getCheckedState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nfunction getNextMatch(values: string[], search: string, currentMatch?: string) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);\n  const nextMatch = wrappedValues.find((value) =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n}\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\ntype Side = 'left' | 'right';\ntype GraceIntent = { area: Polygon; side: Side };\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction isPointerInGraceArea(event: React.PointerEvent, area?: Polygon) {\n  if (!area) return false;\n  const cursorPos = { x: event.clientX, y: event.clientY };\n  return isPointInPolygon(cursorPos, area);\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = Menu;\nconst Sub = MenuSub;\nconst Anchor = MenuAnchor;\nconst SubTrigger = MenuSubTrigger;\nconst Content = MenuContent;\nconst Group = MenuGroup;\nconst Label = MenuLabel;\nconst Item = MenuItem;\nconst CheckboxItem = MenuCheckboxItem;\nconst RadioGroup = MenuRadioGroup;\nconst RadioItem = MenuRadioItem;\nconst ItemIndicator = MenuItemIndicator;\nconst Separator = MenuSeparator;\nconst Arrow = MenuArrow;\n\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuSub,\n  MenuAnchor,\n  MenuSubTrigger,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  //\n  Root,\n  Sub,\n  Anchor,\n  SubTrigger,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n};\nexport type {\n  MenuProps,\n  MenuSubProps,\n  MenuAnchorProps,\n  MenuSubTriggerProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n};\n"]},"metadata":{},"sourceType":"module"}