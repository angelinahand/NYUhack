{"ast":null,"code":"var _jsxFileName = \"/Users/angelinadeo/thehacktrical/NYUhack/src/timerpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport colors from \"../Constants/colors\";\nimport NavBar from \"../Components/NavBar\";\nimport { Card, Flex, View, Heading, Button } from \"@aws-amplify/ui-react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport Demo from \"../Demo.js\";\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip } from \"recharts\";\nimport useSound from \"use-sound\";\nimport alarm from \"../alarm.mp3\";\n/*const timeRotation = [\n  { state: \"focus\", time: 1500 },\n  { state: \"break\", time: 300 },\n  { state: \"focus\", time: 1500 },\n  { state: \"break\", time: 300 },\n  { state: \"focus\", time: 1500 },\n  { state: \"break\", time: 300 },\n  { state: \"focus\", time: 1500 },\n  { state: \"break\", time: 900 },\n];*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timeRotation = [{\n  state: \"focus\",\n  time: 15\n}, {\n  state: \"break\",\n  time: 3\n}, {\n  state: \"focus\",\n  time: 15\n}, {\n  state: \"break\",\n  time: 3\n}, {\n  state: \"focus\",\n  time: 15\n}, {\n  state: \"break\",\n  time: 3\n}, {\n  state: \"focus\",\n  time: 15\n}, {\n  state: \"break\",\n  time: 9\n}];\n\nconst calcFocusedPercent = focusSwitchTimes => {\n  let totalTime = 0;\n  let focusedTime = 0;\n  focusSwitchTimes.forEach((focusSwitch, idx) => {\n    if (idx !== 0) {\n      let switchTime = focusSwitch.time;\n      let prevSwitch = focusSwitchTimes[idx - 1];\n      let prevSwitchTime = prevSwitch.time;\n      let prevSwitchState = prevSwitch.focus;\n      let dt = switchTime - prevSwitchTime;\n\n      if (prevSwitchState === \"focused\") {\n        focusedTime += dt;\n        totalTime += dt;\n      } else if (prevSwitchState === \"unfocused\") {\n        totalTime += dt;\n      }\n    }\n  });\n  return {\n    focusedTime,\n    totalTime\n  };\n};\n\nconst TimerPage = () => {\n  _s();\n\n  const [playing, setPlaying] = useState(false);\n  const [timerIdx, setTimerIdx] = useState(0);\n  const [time, setTime] = useState(timeRotation[timerIdx].time);\n  const [remaining, setRemaining] = useState(timeRotation[timerIdx].time);\n  const [reset, setReset] = useState(0);\n  const [focused, setFocused] = useState(true);\n  const [focusSwitchTimes, setFocusSwitchTimes] = useState([]);\n  const [started, setStarted] = useState(false);\n  const [focusedTime, setFocusedTime] = useState([]);\n  const [play, {\n    stop\n  }] = useSound(alarm);\n\n  function str_pad_left(string, pad, length) {\n    return (new Array(length + 1).join(pad) + string).slice(-length);\n  }\n\n  useEffect(() => {\n    if (started) {\n      if (!playing) {\n        setFocusSwitchTimes(prev => {\n          return [...prev, {\n            time: new Date().getTime(),\n            focus: \"pause\"\n          }];\n        });\n      } else {\n        setFocusSwitchTimes(prev => {\n          return [...prev, {\n            time: new Date().getTime(),\n            focus: focused ? \"focused\" : \"unfocused\"\n          }];\n        });\n      }\n    }\n  }, [playing]);\n  useEffect(() => {\n    if (started) {\n      if (timeRotation[timerIdx].state === \"break\") {\n        setFocusSwitchTimes(prev => {\n          return [...prev, {\n            time: new Date().getTime(),\n            focus: \"break\"\n          }];\n        });\n      } else {\n        setFocusSwitchTimes(prev => {\n          return [...prev, {\n            time: new Date().getTime(),\n            focus: focused ? \"focused\" : \"unfocused\"\n          }];\n        });\n      }\n    }\n  }, [timerIdx]);\n  useEffect(() => {\n    document.title = `${timeRotation[timerIdx].state.charAt(0).toUpperCase() + timeRotation[timerIdx].state.slice(1)} ${Math.floor(remaining / 60)}:${str_pad_left(remaining % 60, \"0\", 2)}`;\n    if (remaining <= time - 3) stop();\n  }, [remaining]);\n\n  const displayFocusTime = () => {\n    let ft = calcFocusedPercent([...focusSwitchTimes, {\n      time: new Date().getTime(),\n      focus: \"end\"\n    }]);\n    let percentFocused = Math.floor(ft.focusedTime / ft.totalTime * 100);\n    let precentUnfocused = 100 - percentFocused;\n    setFocusedTime([{\n      name: `Session ${percentFocused}%`,\n      focused: percentFocused,\n      unfocused: precentUnfocused\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: { ...styles.parent,\n      backgroundColor: focused ? \"#7389AE\" : \"#FF6961\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Demo, {\n      focusChange: focused => {\n        setFocused(focused);\n\n        if (playing && timeRotation[timerIdx].state === \"focus\") {\n          setFocusSwitchTimes(prev => {\n            return [...prev, {\n              time: new Date().getTime(),\n              focus: focused ? \"focused\" : \"unfocused\"\n            }];\n          });\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        width: \"86%\",\n        justifyContent: \"space-around\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"40px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          level: 1,\n          style: {\n            fontFamily: \"inter\",\n            color: \"white\",\n            fontSize: \"70px\",\n            marginBottom: \"32px\",\n            textTransform: \"capitalize\"\n          },\n          children: timeRotation[timerIdx].state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), focusedTime.length > 0 && !started ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"16px\",\n            backgroundColor: \"#fff\",\n            borderRadius: \"16px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 730,\n            height: 250,\n            data: focusedTime,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              min: 0,\n              max: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"focused\",\n              fill: \"#7389AE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"unfocused\",\n              fill: \"#FF6961\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n          isPlaying: playing,\n          duration: time,\n          trailColor: \"transparent\",\n          size: 400,\n          strokeWidth: 20,\n          colors: [[\"#fff\", 1]],\n          onComplete: () => {\n            play();\n            setTimerIdx(prev => {\n              const newIdx = (prev + 1) % timeRotation.length;\n              setTime(timeRotation[newIdx].time);\n              setRemaining(timeRotation[newIdx].time);\n              setReset(prev => prev + 1);\n              return newIdx;\n            });\n          },\n          children: _ref => {\n            let {\n              remainingTime\n            } = _ref;\n            setRemaining(remainingTime);\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 40,\n                fontWeight: \"bold\",\n                padding: 30,\n                textAlign: \"center\"\n              },\n              children: [Math.floor(remainingTime / 60), \":\", str_pad_left(remainingTime % 60, \"0\", 2), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: 30,\n                  fontWeight: \"normal\",\n                  textAlign: \"center\"\n                },\n                children: [\"Next up\", \" \", timeRotation[(timerIdx + 1) % timeRotation.length].state, \" \", \"for\", \" \", Math.floor(timeRotation[(timerIdx + 1) % timeRotation.length].time / 60), \" \", \"minutes.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this);\n          }\n        }, reset, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"32px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: styles.button,\n            onClick: () => {\n              if (!started) {\n                setFocusSwitchTimes([]);\n              }\n\n              setStarted(true);\n              setPlaying(prev => !prev);\n            },\n            children: playing ? \"Pause\" : \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), started && /*#__PURE__*/_jsxDEV(Button, {\n            style: styles.button,\n            onClick: () => {\n              setTimerIdx(0);\n              setStarted(false);\n              setPlaying(false);\n              setReset(prev => prev + 1);\n              setRemaining(0);\n              setFocusSwitchTimes(prev => {\n                return [...prev, {\n                  time: new Date().getTime(),\n                  focus: \"reset\"\n                }];\n              });\n              displayFocusTime();\n            },\n            children: \"End\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), !playing && remaining < time && started && /*#__PURE__*/_jsxDEV(Button, {\n            style: styles.button,\n            onClick: () => {\n              setTime(time);\n              setRemaining(time);\n              setReset(prev => prev + 1);\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), timeRotation[timerIdx].state === \"break\" && /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"2048 game\",\n        id: \"iframe1\",\n        src: \"https://www.mathsisfun.com/games/a/2048/index.html\",\n        scrolling: \"no\",\n        style: {\n          marginTop: \"72px\",\n          maxWidth: \"400px\",\n          height: \"600px\",\n          overflow: \"hidden\",\n          display: \"block\",\n          border: \"none\",\n          padding: \"32px\",\n          borderRadius: \"26px\",\n          backgroundColor: \"rgba(255, 255, 255, 1)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimerPage, \"fweIl6jXRgmDPo15iyM+lrCqEik=\", false, function () {\n  return [useSound];\n});\n\n_c = TimerPage;\nconst styles = {\n  button: {\n    color: \"#7389AE\",\n    backgroundColor: \"#fff\",\n    outline: \"none\",\n    border: \"none\",\n    borderRadius: \"16px\",\n    padding: \"16px 8px\",\n    marginBottom: \"16px\",\n    \"font-size\": \"36px\",\n    \"font-family\": \"Inter\",\n    \"font-weight\": \"bold\",\n    width: \"400px\"\n  },\n  parent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"0px\",\n    width: \"100%\",\n    minHeight: \"100vh\"\n  },\n  main: {\n    margin: \"24px 0px\",\n    height: \"312px\",\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  cardMain: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\",\n    padding: \"160px 40px 40px\",\n    position: \"static\",\n    width: \"708px\",\n    minHeight: \"112px\",\n    left: \"0px\",\n    top: \"0px\",\n    background: \"#FFF\",\n    margin: \"0 24px\"\n  },\n  header: {\n    \"font-family\": \"Inter\",\n    \"font-style\": \"normal\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"40px\",\n    \"line-height\": \"48px\",\n    color: \"#0D1A26\",\n    padding: 0,\n    margin: \"16px 0px\",\n    position: \"static\",\n    width: \"708px\",\n    height: \"48px\",\n    left: \"40px\",\n    top: \"148px\"\n  },\n  text: {\n    \"font-family\": \"Inter\",\n    \"font-style\": \"normal\",\n    \"font-weight\": \"normal\",\n    \"font-size\": \"16px\",\n    \"line-height\": \"24px\",\n    \"letter-spacing\": \"0.01em\",\n    color: \"#304050\",\n    margin: 0,\n    marginBottom: \"10px\",\n    padding: 0,\n    position: \"static\",\n    width: \"708px\",\n    height: \"72px\",\n    left: \"40px\",\n    top: \"212px\"\n  },\n  cardContent: {}\n};\nexport default TimerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerPage\");","map":{"version":3,"sources":["/Users/angelinadeo/thehacktrical/NYUhack/src/timerpage.js"],"names":["React","useEffect","useState","colors","NavBar","Card","Flex","View","Heading","Button","CountdownCircleTimer","Demo","BarChart","Bar","CartesianGrid","XAxis","YAxis","Tooltip","useSound","alarm","timeRotation","state","time","calcFocusedPercent","focusSwitchTimes","totalTime","focusedTime","forEach","focusSwitch","idx","switchTime","prevSwitch","prevSwitchTime","prevSwitchState","focus","dt","TimerPage","playing","setPlaying","timerIdx","setTimerIdx","setTime","remaining","setRemaining","reset","setReset","focused","setFocused","setFocusSwitchTimes","started","setStarted","setFocusedTime","play","stop","str_pad_left","string","pad","length","Array","join","slice","prev","Date","getTime","document","title","charAt","toUpperCase","Math","floor","displayFocusTime","ft","percentFocused","precentUnfocused","name","unfocused","styles","parent","backgroundColor","display","flexDirection","width","justifyContent","paddingTop","alignItems","fontFamily","color","fontSize","marginBottom","textTransform","padding","borderRadius","newIdx","remainingTime","fontWeight","textAlign","marginTop","button","maxWidth","height","overflow","border","outline","minHeight","main","margin","cardMain","position","left","top","background","header","text","cardContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport colors from \"../Constants/colors\";\nimport NavBar from \"../Components/NavBar\";\nimport { Card, Flex, View, Heading, Button } from \"@aws-amplify/ui-react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport Demo from \"../Demo.js\";\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip } from \"recharts\";\nimport useSound from \"use-sound\";\nimport alarm from \"../alarm.mp3\";\n\n/*const timeRotation = [\n  { state: \"focus\", time: 1500 },\n  { state: \"break\", time: 300 },\n  { state: \"focus\", time: 1500 },\n  { state: \"break\", time: 300 },\n  { state: \"focus\", time: 1500 },\n  { state: \"break\", time: 300 },\n  { state: \"focus\", time: 1500 },\n  { state: \"break\", time: 900 },\n];*/\nconst timeRotation = [\n  { state: \"focus\", time: 15 },\n  { state: \"break\", time: 3 },\n  { state: \"focus\", time: 15 },\n  { state: \"break\", time: 3 },\n  { state: \"focus\", time: 15 },\n  { state: \"break\", time: 3 },\n  { state: \"focus\", time: 15 },\n  { state: \"break\", time: 9 },\n];\n\nconst calcFocusedPercent = (focusSwitchTimes) => {\n  let totalTime = 0;\n  let focusedTime = 0;\n\n  focusSwitchTimes.forEach((focusSwitch, idx) => {\n    if (idx !== 0) {\n      let switchTime = focusSwitch.time;\n\n      let prevSwitch = focusSwitchTimes[idx - 1];\n      let prevSwitchTime = prevSwitch.time;\n      let prevSwitchState = prevSwitch.focus;\n      let dt = switchTime - prevSwitchTime;\n\n      if (prevSwitchState === \"focused\") {\n        focusedTime += dt;\n        totalTime += dt;\n      } else if (prevSwitchState === \"unfocused\") {\n        totalTime += dt;\n      }\n    }\n  });\n\n  return { focusedTime, totalTime };\n};\n\nconst TimerPage = () => {\n  const [playing, setPlaying] = useState(false);\n  const [timerIdx, setTimerIdx] = useState(0);\n  const [time, setTime] = useState(timeRotation[timerIdx].time);\n  const [remaining, setRemaining] = useState(timeRotation[timerIdx].time);\n  const [reset, setReset] = useState(0);\n  const [focused, setFocused] = useState(true);\n  const [focusSwitchTimes, setFocusSwitchTimes] = useState([]);\n  const [started, setStarted] = useState(false);\n  const [focusedTime, setFocusedTime] = useState([]);\n\n  const [play, { stop }] = useSound(alarm);\n\n  function str_pad_left(string, pad, length) {\n    return (new Array(length + 1).join(pad) + string).slice(-length);\n  }\n\n  useEffect(() => {\n    if (started) {\n      if (!playing) {\n        setFocusSwitchTimes((prev) => {\n          return [...prev, { time: new Date().getTime(), focus: \"pause\" }];\n        });\n      } else {\n        setFocusSwitchTimes((prev) => {\n          return [\n            ...prev,\n            {\n              time: new Date().getTime(),\n              focus: focused ? \"focused\" : \"unfocused\",\n            },\n          ];\n        });\n      }\n    }\n  }, [playing]);\n\n  useEffect(() => {\n    if (started) {\n      if (timeRotation[timerIdx].state === \"break\") {\n        setFocusSwitchTimes((prev) => {\n          return [...prev, { time: new Date().getTime(), focus: \"break\" }];\n        });\n      } else {\n        setFocusSwitchTimes((prev) => {\n          return [\n            ...prev,\n            {\n              time: new Date().getTime(),\n              focus: focused ? \"focused\" : \"unfocused\",\n            },\n          ];\n        });\n      }\n    }\n  }, [timerIdx]);\n\n  useEffect(() => {\n    document.title = `${\n      timeRotation[timerIdx].state.charAt(0).toUpperCase() +\n      timeRotation[timerIdx].state.slice(1)\n    } ${Math.floor(remaining / 60)}:${str_pad_left(remaining % 60, \"0\", 2)}`;\n    if (remaining <= time - 3) stop();\n  }, [remaining]);\n\n  const displayFocusTime = () => {\n    let ft = calcFocusedPercent([\n      ...focusSwitchTimes,\n      { time: new Date().getTime(), focus: \"end\" },\n    ]);\n    let percentFocused = Math.floor((ft.focusedTime / ft.totalTime) * 100);\n    let precentUnfocused = 100 - percentFocused;\n    setFocusedTime([\n      {\n        name: `Session ${percentFocused}%`,\n        focused: percentFocused,\n        unfocused: precentUnfocused,\n      },\n    ]);\n  };\n\n  return (\n    <View\n      style={{\n        ...styles.parent,\n        backgroundColor: focused ? \"#7389AE\" : \"#FF6961\",\n      }}\n    >\n      <NavBar />\n      <Demo\n        focusChange={(focused) => {\n          setFocused(focused);\n          if (playing && timeRotation[timerIdx].state === \"focus\") {\n            setFocusSwitchTimes((prev) => {\n              return [\n                ...prev,\n                {\n                  time: new Date().getTime(),\n                  focus: focused ? \"focused\" : \"unfocused\",\n                },\n              ];\n            });\n          }\n        }}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"86%\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <div\n          style={{\n            paddingTop: \"40px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Heading\n            level={1}\n            style={{\n              fontFamily: \"inter\",\n              color: \"white\",\n              fontSize: \"70px\",\n              marginBottom: \"32px\",\n              textTransform: \"capitalize\",\n            }}\n          >\n            {timeRotation[timerIdx].state}\n          </Heading>\n          {focusedTime.length > 0 && !started ? (\n            <div\n              style={{\n                padding: \"16px\",\n                backgroundColor: \"#fff\",\n                borderRadius: \"16px\",\n              }}\n            >\n              <BarChart width={730} height={250} data={focusedTime}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis min={0} max={100} />\n                <Tooltip />\n                <Bar dataKey=\"focused\" fill=\"#7389AE\" />\n                <Bar dataKey=\"unfocused\" fill=\"#FF6961\" />\n              </BarChart>\n            </div>\n          ) : (\n            <CountdownCircleTimer\n              key={reset}\n              isPlaying={playing}\n              duration={time}\n              trailColor=\"transparent\"\n              size={400}\n              strokeWidth={20}\n              colors={[[\"#fff\", 1]]}\n              onComplete={() => {\n                play();\n                setTimerIdx((prev) => {\n                  const newIdx = (prev + 1) % timeRotation.length;\n                  setTime(timeRotation[newIdx].time);\n                  setRemaining(timeRotation[newIdx].time);\n                  setReset((prev) => prev + 1);\n                  return newIdx;\n                });\n              }}\n            >\n              {({ remainingTime }) => {\n                setRemaining(remainingTime);\n                return (\n                  <p\n                    style={{\n                      fontSize: 40,\n                      fontWeight: \"bold\",\n                      padding: 30,\n                      textAlign: \"center\",\n                    }}\n                  >\n                    {Math.floor(remainingTime / 60)}:\n                    {str_pad_left(remainingTime % 60, \"0\", 2)}\n                    <br></br>\n                    <p\n                      style={{\n                        fontSize: 30,\n                        fontWeight: \"normal\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      Next up{\" \"}\n                      {timeRotation[(timerIdx + 1) % timeRotation.length].state}{\" \"}\n                      for{\" \"}\n                      {Math.floor(\n                        timeRotation[(timerIdx + 1) % timeRotation.length]\n                          .time / 60\n                      )}{\" \"}\n                      minutes.\n                    </p>\n                  </p>\n                );\n              }}\n            </CountdownCircleTimer>\n          )}\n          <div\n            style={{\n              marginTop: \"32px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Button\n              style={styles.button}\n              onClick={() => {\n                if (!started) {\n                  setFocusSwitchTimes([]);\n                }\n                setStarted(true);\n                setPlaying((prev) => !prev);\n              }}\n            >\n              {playing ? \"Pause\" : \"Start\"}\n            </Button>\n            {started && (\n              <Button\n                style={styles.button}\n                onClick={() => {\n                  setTimerIdx(0);\n                  setStarted(false);\n                  setPlaying(false);\n                  setReset((prev) => prev + 1);\n                  setRemaining(0);\n                  setFocusSwitchTimes((prev) => {\n                    return [\n                      ...prev,\n                      { time: new Date().getTime(), focus: \"reset\" },\n                    ];\n                  });\n                  displayFocusTime();\n                }}\n              >\n                End\n              </Button>\n            )}\n            {!playing && remaining < time && started && (\n              <Button\n                style={styles.button}\n                onClick={() => {\n                  setTime(time);\n                  setRemaining(time);\n                  setReset((prev) => prev + 1);\n                }}\n              >\n                Reset\n              </Button>\n            )}\n          </div>\n        </div>\n\n        {timeRotation[timerIdx].state === \"break\" && (\n          <iframe\n            title=\"2048 game\"\n            id=\"iframe1\"\n            src=\"https://www.mathsisfun.com/games/a/2048/index.html\"\n            scrolling=\"no\"\n            style={{\n              marginTop: \"72px\",\n              maxWidth: \"400px\",\n              height: \"600px\",\n              overflow: \"hidden\",\n              display: \"block\",\n              border: \"none\",\n              padding: \"32px\",\n              borderRadius: \"26px\",\n              backgroundColor: \"rgba(255, 255, 255, 1)\",\n            }}\n          ></iframe>\n        )}\n      </div>\n    </View>\n  );\n};\n\nconst styles = {\n  button: {\n    color: \"#7389AE\",\n    backgroundColor: \"#fff\",\n    outline: \"none\",\n    border: \"none\",\n    borderRadius: \"16px\",\n    padding: \"16px 8px\",\n    marginBottom: \"16px\",\n    \"font-size\": \"36px\",\n    \"font-family\": \"Inter\",\n    \"font-weight\": \"bold\",\n    width: \"400px\",\n  },\n  parent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"0px\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    margin: \"24px 0px\",\n    height: \"312px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  cardMain: {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\",\n    padding: \"160px 40px 40px\",\n\n    position: \"static\",\n    width: \"708px\",\n    minHeight: \"112px\",\n    left: \"0px\",\n    top: \"0px\",\n    background: \"#FFF\",\n    margin: \"0 24px\",\n  },\n  header: {\n    \"font-family\": \"Inter\",\n    \"font-style\": \"normal\",\n    \"font-weight\": \"bold\",\n    \"font-size\": \"40px\",\n    \"line-height\": \"48px\",\n    color: \"#0D1A26\",\n    padding: 0,\n    margin: \"16px 0px\",\n    position: \"static\",\n    width: \"708px\",\n    height: \"48px\",\n    left: \"40px\",\n    top: \"148px\",\n  },\n  text: {\n    \"font-family\": \"Inter\",\n    \"font-style\": \"normal\",\n    \"font-weight\": \"normal\",\n    \"font-size\": \"16px\",\n    \"line-height\": \"24px\",\n    \"letter-spacing\": \"0.01em\",\n    color: \"#304050\",\n    margin: 0,\n    marginBottom: \"10px\",\n    padding: 0,\n    position: \"static\",\n    width: \"708px\",\n    height: \"72px\",\n    left: \"40px\",\n    top: \"212px\",\n  },\n  cardContent: {},\n};\n\nexport default TimerPage;\n"]},"metadata":{},"sourceType":"module"}