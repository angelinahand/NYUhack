{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport * as t from \"@radix-ui/react-roving-focus\";\nimport { createRovingFocusGroupScope as a } from \"@radix-ui/react-roving-focus\";\nimport { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { useControllableState as r } from \"@radix-ui/react-use-controllable-state\";\nimport { useCallbackRef as i } from \"@radix-ui/react-use-callback-ref\";\nimport { createContextScope as n } from \"@radix-ui/react-context\";\nimport { composeEventHandlers as s } from \"@radix-ui/primitive\";\nimport * as c from \"react\";\nimport d from \"@babel/runtime/helpers/esm/extends\";\nconst [l, u] = n(\"Tabs\", [a]);\nexport { u as createTabsScope };\nconst b = a(),\n      [m, p] = l(\"Tabs\");\nexport const Tabs = /*#__PURE__*/c.forwardRef((t, a) => {\n  const {\n    __scopeTabs: i,\n    value: n,\n    onValueChange: s,\n    defaultValue: l,\n    orientation: u = \"horizontal\",\n    dir: b = \"ltr\",\n    activationMode: p = \"automatic\",\n    ...f\n  } = t,\n        [v, T] = r({\n    prop: n,\n    onChange: s,\n    defaultProp: l\n  });\n  /*#__PURE__*/\n\n  return c.createElement(m, {\n    scope: i,\n    baseId: e(),\n    value: v,\n    onValueChange: T,\n    orientation: u,\n    dir: b,\n    activationMode: p\n  }, /*#__PURE__*/c.createElement(o.div, d({\n    \"data-orientation\": u\n  }, f, {\n    ref: a\n  })));\n});\n/*#__PURE__*/\n\nexport const TabsList = /*#__PURE__*/c.forwardRef((e, a) => {\n  const {\n    __scopeTabs: r,\n    loop: i = !0,\n    ...n\n  } = e,\n        s = p(\"TabsList\", r),\n        l = b(r);\n  /*#__PURE__*/\n\n  return c.createElement(t.Root, d({\n    asChild: !0\n  }, l, {\n    orientation: s.orientation,\n    dir: s.dir,\n    loop: i\n  }), /*#__PURE__*/c.createElement(o.div, d({\n    role: \"tablist\",\n    dir: s.dir\n  }, n, {\n    ref: a\n  })));\n});\n/*#__PURE__*/\n\nexport const TabsTrigger = /*#__PURE__*/c.forwardRef((e, a) => {\n  const {\n    __scopeTabs: r,\n    value: n,\n    disabled: l = !1,\n    ...u\n  } = e,\n        m = p(\"TabsTrigger\", r),\n        T = b(r),\n        x = f(m.baseId, n),\n        g = v(m.baseId, n),\n        h = n === m.value,\n        C = i(() => m.onValueChange(n));\n  /*#__PURE__*/\n\n  return c.createElement(t.Item, d({\n    asChild: !0\n  }, T, {\n    focusable: !l,\n    active: h\n  }), /*#__PURE__*/c.createElement(o.div, d({\n    role: \"tab\",\n    \"aria-selected\": h,\n    \"aria-controls\": g,\n    \"aria-disabled\": l || void 0,\n    \"data-state\": h ? \"active\" : \"inactive\",\n    \"data-disabled\": l ? \"\" : void 0,\n    id: x\n  }, u, {\n    ref: a,\n    onKeyDown: s(e.onKeyDown, e => {\n      l || \" \" !== e.key && \"Enter\" !== e.key || C();\n    }),\n    onMouseDown: s(e.onMouseDown, e => {\n      l || 0 !== e.button || !1 !== e.ctrlKey || C();\n    }),\n    onFocus: s(e.onFocus, () => {\n      const e = \"manual\" !== m.activationMode;\n      h || l || !e || C();\n    })\n  })));\n});\n/*#__PURE__*/\n\nexport const TabsContent = /*#__PURE__*/c.forwardRef((e, t) => {\n  const {\n    __scopeTabs: a,\n    value: r,\n    children: i,\n    ...n\n  } = e,\n        s = p(\"TabsContent\", a),\n        l = f(s.baseId, r),\n        u = v(s.baseId, r),\n        b = r === s.value;\n  /*#__PURE__*/\n\n  return c.createElement(o.div, d({\n    \"data-state\": b ? \"active\" : \"inactive\",\n    \"data-orientation\": s.orientation,\n    role: \"tabpanel\",\n    \"aria-labelledby\": l,\n    hidden: !b,\n    id: u,\n    tabIndex: 0\n  }, n, {\n    ref: t\n  }), b && i);\n});\n/*#__PURE__*/\n\nfunction f(e, t) {\n  return `${e}-trigger-${t}`;\n}\n\nfunction v(e, t) {\n  return `${e}-content-${t}`;\n}\n\nexport const Root = Tabs;\nexport const List = TabsList;\nexport const Trigger = TabsTrigger;\nexport const Content = TabsContent;","map":{"version":3,"mappings":"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","names":["createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","React","forwardRef","props","forwardedRef","__scopeTabs","value","valueProp","onValueChange","defaultValue","orientation","dir","activationMode","tabsProps","setValue","useControllableState","prop","onChange","defaultProp","_react","$b40a02b2d3d1d21ebd9ba3d555116441$var$TabsProvider","scope","baseId","useId","Primitive","div","_babelRuntimeHelpersEsmExtends","ref","TabsList","loop","listProps","context","rovingFocusGroupScope","_radixUiReactRovingFocus","Root","asChild","role","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","handleTabChange","useCallbackRef","Item","focusable","active","undefined","id","onKeyDown","composeEventHandlers","event","key","onMouseDown","button","ctrlKey","onFocus","isAutomaticActivation","TabsContent","children","contentProps","hidden","tabIndex","List","Trigger","Content"],"sources":["/Users/angelinadeo/thehacktrical/NYUhack/node_modules/@radix-ui/react-tabs/dist/packages/react/tabs/src/Tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   * @defaultValue ltr\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /** Whether a tab is activated automatically or manually (default: automatic) */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir = 'ltr',\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={dir}\n        activationMode={activationMode}\n      >\n        <Primitive.div data-orientation={orientation} {...tabsProps} ref={forwardedRef} />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div role=\"tablist\" dir={context.dir} {...listProps} ref={forwardedRef} />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsTriggerProps extends PrimitiveDivProps {\n  value: string;\n  disabled?: boolean;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const handleTabChange = useCallbackRef(() => context.onValueChange(value));\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.div\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          aria-disabled={disabled || undefined}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (!disabled && (event.key === ' ' || event.key === 'Enter')) {\n              handleTabChange();\n            }\n          })}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              handleTabChange();\n            }\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              handleTabChange();\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <Primitive.div\n        data-state={isSelected ? 'active' : 'inactive'}\n        data-orientation={context.orientation}\n        role=\"tabpanel\"\n        aria-labelledby={triggerId}\n        hidden={!isSelected}\n        id={contentId}\n        tabIndex={0}\n        {...contentProps}\n        ref={forwardedRef}\n      >\n        {isSelected && children}\n      </Primitive.div>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n"]},"metadata":{},"sourceType":"module"}